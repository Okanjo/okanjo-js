{"version":3,"sources":["Array.from.js","Array.prototype.find.js","Array.prototype.findIndex.js","Array.prototype.includes.js","NodeList.prototype.forEach.js","Object.Assign.js","Okanjo.js","Request.js","Cookie.js","Metrics.js"],"names":["Array","from","instance","Constructor","TypeError","_createClass","protoProps","call","_defineProperties","prototype","staticProps","Object","defineProperty","writable","isFinite","fn","number","toLength","value","maxSafeInteger","toInteger","len","Math","items","arrayLike","toStr","toString","pow","mapFn","isCallable","T","arguments","length","A","this","kValue","k","predicate","thisArg","o","searchElement","fromIndex","n","x","y","sameValueZero","abs","window","i","NodeList","assign","callback","target","varArgs","nextSource","to","nextKey","index","hasOwnProperty","document","Console","undefined","console","pageXOffset","AGENT","navigator","userAgent","MOBILE_PATTERN","key","settings","metrics","okanjo","report","messageIndex","_len","args","_key","err","find","arg","Error","stack","error","push","filter","a","findIndex","reportStack","join","splice","message","version","concat","apply","warn","selector","parent","_len2","querySelector","_key2","qwery","querySelectorAll","lib","routes","endpoint","ads","getRoute","route","params","env","request","keys","forEach","replace","net","sandboxEndpoint","util","isEmpty","test","val","trim","getPageArguments","query","decodeURIComponent","includeHashArguments","part","eqIndex","hashArgs","substring","queryArgs","split","location","search","indexOf","hash","max","ifDefined","deepClone","mixed","out","map","flatten","input","output","isArray","options","childObject","Date","dateToIso","toISOString","childKey","ignoreArrays","shortid","arrayToCsv","crypto","str","encode","counter","previousSeconds","seconds","getLocation","getScrollPosition","href","e","ui","referrer","SUPPORTS_PAGE_OFFSET","CSS1_COMPATIBLE","documentElement","body","scrollLeft","pageYOffset","getElementSize","includeMargin","scrollTop","element","height","size","offsetHeight","width","offsetWidth","style","currentStyle","getComputedStyle","parseInt","marginTop","marginBottom","getPageSize","marginLeft","marginRight","html","getViewportSize","w","scrollWidth","h","scrollHeight","clientHeight","isMobileZoom","clientWidth","inWidth","innerWidth","inHeight","vw","vh","event","getEventPosition","ex","ey","pageY","clientX","el","clientY","__proto__","constructor","name","getElementPosition","rect","getBoundingClientRect","left","y1","x1","top","right","x2","bottom","exception","y2","_getIntersection","s","v","iLeft","iTop","iBottom","min","isElementVisible","iRight","elementArea","getPercentageInViewport","_okanjo$ui$_getInters","intersectionArea","replacedText","container","replacer","span","parentNode","targetHeight","useTextContent","match","textContent","text","innerText","safety","ELLIPSIFY_PATTERN","createElement","content","fitImages","img","display","articleSVG","inlineSVG","JSON_TEST","svg","btoa","Metrics","done","loopCounter","REDUCE_TIME","Uint8Array","getRandomValues","dest","randomByte","getKey","keyPrefix","ActiveXObject","method","url","payload","calledBack","timeout","req","ontimeout","res","XMLHttpRequest","attributes","onreadystatechange","readyState","xhr","statusCode","status","responseText","data","toUpperCase","withCredentials","open","includes","get","post","send","bind","encodeURIComponent","stringify","obj","pairs","_typeof","expires","expireDays","set","cookieName","expireDate","setDate","getDate","toUTCString","secure","protocol","cookieValue","encodeURI","cookie","nameTest","substr","_getStoredQueue","_classCallCheck","sourceCh","sourceCx","pageId","defaultChannel","Channel","external","sid","queue","localStorage","Params","JSON","parse","delay","_saveQueueTimeout","clearTimeout","setTimeout","_this","_saveQueue","_queue","object_type","event_type","Event","id","urlSid","localSid","ch","sourceContext","pageArgs","context","sourceChannel","channel","correlation","_noProcess","_push","page","view","trackEvent","_processQueue","_processTimeout","_this2","_updateSid","item","_this3","_normalizeEvent","win","metrics_batch","m","ref_ch","ok_ver","ref_cx","allowedKeys","has","ref","_len3","_key3","pw","containerSize","wox1","resources","getMin","current","wix1","wiy1","boxes","_fallback","getMax","wix2","wiy2","fallback","wrps","floor","pos","vx1","vy1","vx2","vp","jsEvent","et","_len4","_key4","_len5","_key5","Meta","exclude","include","impression","interaction","Action","click","inline_click","article","thirdparty_ad","cart","order","order_item","user","metric_session","widget","product","store","cause","placement","marketplace","live","testing","store_widget","Environment","others","MetricEvent","_this4","_data","addEventInfo","addViewportInfo","_element","addElementInfo","addWidgetInfo","_len6","_key6","addEventMeta"],"mappings":"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","file":"okanjo-metrics.min.js","sourcesContent":["// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n    Array.from = (function () {\n        var toStr = Object.prototype.toString;\n        var isCallable = function (fn) {\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function (value) {\n            var number = Number(value);\n            if (isNaN(number)) { return 0; }\n            if (number === 0 || !isFinite(number)) { return number; }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function (value) {\n            var len = toInteger(value);\n            return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n\n        // The length property of the from method is 1.\n        return function from(arrayLike/*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            var C = this;\n\n            // 2. Let items be ToObject(arrayLike).\n            var items = Object(arrayLike);\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n            var T;\n            if (typeof mapFn !== 'undefined') {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2];\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            var len = toLength(items.length);\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n            // 16. Let k be 0.\n            var k = 0;\n            // 17. Repeat, while k < len… (also steps a - h)\n            var kValue;\n            while (k < len) {\n                kValue = items[k];\n                if (mapFn) {\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n                } else {\n                    A[k] = kValue;\n                }\n                k += 1;\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len;\n            // 20. Return A.\n            return A;\n        };\n    }());\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nif (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n        value: function(searchElement, fromIndex) {\n\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            // 1. Let O be ? ToObject(this value).\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If len is 0, return false.\n            if (len === 0) {\n                return false;\n            }\n\n            // 4. Let n be ? ToInteger(fromIndex).\n            //    (If fromIndex is undefined, this step produces the value 0.)\n            var n = fromIndex | 0;\n\n            // 5. If n ≥ 0, then\n            //  a. Let k be n.\n            // 6. Else n < 0,\n            //  a. Let k be len + n.\n            //  b. If k < 0, let k be 0.\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            function sameValueZero(x, y) {\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\n            }\n\n            // 7. Repeat, while k < len\n            while (k < len) {\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\n                if (sameValueZero(o[k], searchElement)) {\n                    return true;\n                }\n                // c. Increase k by 1.\n                k++;\n            }\n\n            // 8. Return false\n            return false;\n        }\n    });\n}","// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n        value: function assign(target, varArgs) { // .length of function is 2\n            'use strict';\n            if (target == null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}","\"use strict\";\n\n/* exported okanjo */\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n/**\n * Okanjo widget framework namespace\n * @global okanjo\n */\nconst okanjo = (function(window, document) { // eslint-disable-line no-unused-vars\n\n    //region Constants\n\n    // Environment Vars\n    const SUPPORTS_PAGE_OFFSET = window.pageXOffset !== undefined;\n    const CSS1_COMPATIBLE = (document.compatMode || /* istanbul ignore next: out of scope */ \"\") === \"CSS1Compat\";\n    const AGENT = window.navigator.userAgent;\n    const ELLIPSIFY_PATTERN = /[\\s\\S](?:\\.\\.\\.)?$/;\n    const MOBILE_PATTERN = /(iPhone|iPad|iPod|Android|blackberry)/i;\n    const NOOP = () => {};\n    const Console = window.console;\n\n    // Place to pull defaults, if already set\n    const settings = window.okanjo || {};\n\n    //endregion\n\n    //region Okanjo Core\n\n\n    //noinspection JSValidateJSDoc,JSClosureCompilerSyntax - idk phpStorm generated it so why would it be wrong? :P\n    /**\n     * Okanjo namespace\n     * @global\n     * @type {{version: string, metrics: null, key: null, report: ((...p1?:*[])), warn: ((p1?:*, ...p2?:*[])), qwery: ((p1?:*, p2?:*))}}\n     */\n    const okanjo = {\n\n        /**\n         * Okanjo version\n         */\n        version: \"%%OKANJO_VERSION\",\n\n        /**\n         * Placeholder\n         */\n        metrics: null,\n\n        /**\n         * Global/default placement key\n         */\n        key: settings.key || null,\n\n        /**\n         * Reports an error to the console and possibly Raven in the future\n         * @param args\n         */\n        report: (...args) => {\n            let err = args.find((arg) => arg instanceof Error);\n            if (!err) {\n                let messageIndex = args.findIndex((arg) => typeof arg === \"string\");\n                err = new Error(args[messageIndex] || \"Okanjo Error\");\n                if (messageIndex >= 0) args.splice(messageIndex, 1);\n            } else {\n                // Grow our own stack so we can figure out what async thing did it\n                let stack = (new Error()).stack.split('\\n');\n                stack.shift();\n                stack.shift();\n                args.push({ reportStack: stack.join('\\n') });\n                args = args.filter((a) => a !== err);\n            }\n\n            Console.error(`[Okanjo v${okanjo.version}]: ${err.stack}`);\n            args.length && Console.error.apply(Console, ['Additional information:'].concat(args));\n\n            // TODO - integrate with Raven\n        },\n\n        /**\n         * Warn developers of their misdeeds\n         * @param message\n         * @param args\n         */\n        warn: (message, ...args) => {\n            const err = new Error(message);\n\n            Console.warn(`[Okanjo v${okanjo.version}]: ${err.stack}`);\n            args.length && Console.warn.apply(Console, ['Additional information:'].concat(args));\n        },\n\n        // Backwards compatibility when we shipped with qwery, cuz querySelector[All] wasn't mainstream enough\n        qwery: (selector, parent) => {\n\n            // If parent is a selector, select the parent first!\n            if (typeof parent === \"string\") {\n                parent = document.querySelector(parent);\n\n                // If parent is not found, there are obviously no results\n                if (!parent) return [];\n            }\n\n            if (!parent) parent = document;\n\n            return parent.querySelectorAll(selector);\n        }\n    };\n\n    //endregion\n\n    //region Vendor Libs\n\n    /**\n     * Placeholder for where vendor libraries get no-conflict loaded\n     * @type {{}}\n     */\n    okanjo.lib = {};\n\n    //endregion\n\n    //region Networking\n\n    /**\n     * Networking methods\n     * @type {{getRoute: *, exec: *}}\n     */\n    okanjo.net = {\n\n        /**\n         * API Endpoints\n         */\n        endpoint: 'https://api2.okanjo.com',\n        sandboxEndpoint: 'https://sandbox-api2.okanjo.com',\n\n        /**\n         * API routes\n         */\n        routes: {\n            ads: '/content',\n            metrics: '/metrics/:object_type/:event_type',\n            metrics_batch: '/metrics'\n        },\n\n        /**\n         * Compiles a route and parameters into a final URL\n         * @param {string} route - Route constant\n         * @param {*} [params] - Key value hash\n         * @param {*} [env] - Optional environment to use instead of live\n         * @return {string} - Route\n         */\n        getRoute: (route, params, env) => {\n            if (params) {\n                Object.keys(params).forEach((key) => {\n                    route = route.replace(`:${key}`, params[key]+\"\");\n                });\n            }\n            env = env || okanjo.env || 'live';\n            return (env === 'sandbox' ? okanjo.net.sandboxEndpoint : okanjo.net.endpoint) + route;\n        },\n\n        // placeholder, xhr request extension\n        request: NOOP\n    };\n\n    //endregion\n\n    // region Utilities\n\n    //noinspection JSClosureCompilerSyntax,JSValidateJSDoc\n    /**\n     * Utility functions and helpers\n     * @type {{isEmpty: ((p1?:*)=>boolean), isMobile: (()), getPageArguments: ((p1:boolean))}}\n     */\n    okanjo.util = {\n\n        /**\n         * Checks whether a value is _really_ empty (trims)\n         * @param val\n         * @return {boolean}\n         */\n        isEmpty: (val) => val === null || val === undefined || (typeof val === \"string\" && val.trim().length === 0),\n\n        /**\n         * Checks if the current user agent identifies as a mobile device\n         * @returns {boolean}\n         */\n        isMobile: () => {\n            // KludgyAF™, but let's go with it\n            return MOBILE_PATTERN.test(AGENT);\n        },\n\n        /**\n         * Returns an object hashmap of query and hash parameters\n         * @param {boolean} includeHashArguments - Whether to include the hash arguments, if any\n         * @return {*}\n         */\n        getPageArguments: (includeHashArguments) => {\n\n            const split = (query) => {\n                query = query || \"\";\n                const params = {};\n                const parts = query.split('&');\n                parts.forEach((part) => {\n                    const eqIndex = part.indexOf('=');\n                    let key, value;\n                    if (eqIndex < 0) {\n                        key = decodeURIComponent(part);\n                        value = null;\n                    } else {\n                        key = decodeURIComponent(part.substring(0, eqIndex));\n                        value = decodeURIComponent(part.substring(eqIndex + 1));\n                    }\n                    if (key) params[key] = value;\n                });\n                return params;\n            };\n\n            const queryArgs = split(window.location.search.substring(window.location.search.indexOf('?') + 1));\n            const hashArgs = includeHashArguments ? split(window.location.hash.substring(Math.max(window.location.hash.indexOf('#') + 1, window.location.hash.indexOf('#!') + 2))) : {};\n            Object.keys(hashArgs).forEach((key) => queryArgs[key] = hashArgs[key]);\n\n            return queryArgs;\n        },\n\n        /**\n         * Returns the value if defined and not null\n         * @param val Value to use if defined\n         * @returns {*|null} Defined value or null\n         */\n        ifDefined: (val) => (typeof val !== \"undefined\" && val !== null) ? val : null\n\n    };\n\n    /**\n     * Deep clones an object by breaking references, unlike Object.assign\n     * @param mixed – Source to clone (object, array, value)\n     * @param [out] - Existing output, if any\n     * @return {*}\n     */\n    okanjo.util.deepClone = (mixed, out) => {\n        if (Array.isArray(mixed)) {\n            // Array reference\n            out = out || [];\n            out = out.concat(mixed.map((val) => okanjo.util.deepClone(val)));\n        } else if (typeof mixed === \"object\" && mixed !== null) {\n            // Object reference\n            out = out || {};\n            Object.keys(mixed).forEach((key) => {\n                out[key] = okanjo.util.deepClone(mixed[key]);\n            });\n        } else {\n            // Value\n            out = mixed;\n        }\n\n        return out;\n    };\n\n    /**\n     * Flattens a multi-dimensional object into a single object\n     * @param input\n     * @param [options]\n     * @return {{}}\n     */\n    okanjo.util.flatten = (input, options = {}) => {\n        const output = {};\n\n        if (input !== undefined && input !== null) {\n            Object\n                .keys(input)\n                .forEach((key) => {\n                    // Convert object ids to hex strings\n                    if (input[key] instanceof Date) {\n                        if (options.dateToIso) {\n                            output[key] = input[key].toISOString(); // convert to iso\n                        } else {\n                            output[key] = input[key]; // as-is\n                        }\n                    } else if (typeof input[key] === 'object' && input[key] !== null) {\n                        // Allow ignoring arrays if desired\n                        if (Array.isArray(input[key]) && options.ignoreArrays === true) {\n                            output[key] = input[key];\n                        } else if (Array.isArray(input[key]) && options.arrayToCsv === true) {\n                            output[key] = input[key].join(',');\n                        } else {\n                            // Make child objects flat too (always returns object so Object.keys is safe)\n                            const childObject = okanjo.util.flatten(input[key], options);\n                            Object\n                                .keys(childObject)\n                                .forEach((childKey) => {\n                                    output[key + '_' + childKey] = childObject[childKey];\n                                })\n                            ;\n                        }\n                    } else {\n                        // Copy value references\n                        output[key] = input[key];\n                    }\n                })\n            ;\n        }\n\n        return output;\n    };\n\n    /*! based on shortid https://github.com/dylang/shortid */\n    okanjo.util.shortid = (function(clusterWorkerId) {\n\n        const shuffled = 'ylZM7VHLvOFcohp01x-fXNr8P_tqin6RkgWGm4SIDdK5s2TAJebzQEBUwuY9j3aC',\n\n            crypto = window.crypto || window.msCrypto || (typeof require === \"function\" && require('crypto')),\n\n            randomByte = () => {\n                /* istanbul ignore next: platform diffs out of scope */\n                if (crypto && crypto.randomBytes) {\n                    return crypto.randomBytes(1)[0] & 0x30;\n                } else if (!crypto || !crypto.getRandomValues) {\n                    return Math.floor(Math.random() * 256) & 0x30;\n                }\n                /* istanbul ignore next: platform diffs out of scope */\n                const dest = new Uint8Array(1);\n                /* istanbul ignore next: platform diffs out of scope */\n                crypto.getRandomValues(dest);\n                /* istanbul ignore next: platform diffs out of scope */\n                return dest[0] & 0x30;\n            },\n\n            encode = (number) => {\n                let loopCounter = 0,\n                    done,\n                    str = '';\n\n                while (!done) {\n                    str = str + shuffled[ ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() ];\n                    done = number < (Math.pow(16, loopCounter + 1 ) );\n                    loopCounter++;\n                }\n                return str;\n            },\n\n            // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n            // This number should be updated every year or so to keep the generated id short.\n            // To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n            REDUCE_TIME = 1490384907498,\n            version = 7;\n\n        let counter,\n            previousSeconds;\n\n        clusterWorkerId = clusterWorkerId || 0;\n\n        return function() {\n            let str = '',\n                seconds = Math.floor(((new Date()).getTime() - REDUCE_TIME) * 0.001);\n\n            if (seconds === previousSeconds) {\n                counter++;\n            } else {\n                counter = 0;\n                previousSeconds = seconds;\n            }\n\n            str = str + encode(version) + encode(clusterWorkerId);\n            if (counter > 0) {\n                str = str + encode(counter);\n            }\n            str = str + encode(seconds);\n\n            return str;\n        };\n    })();\n\n    /**\n     * Gets the best URL for where we are operating\n     * @returns {string|*}\n     */\n    okanjo.util.getLocation = () => {\n        /* istanbul ignore if: hard to reproduce in jsdom at the moment */\n        if (window.location !== window.parent.location) {\n            // attempt to see if the frame is friendly and get the parent\n            try {\n                return window.parent.location.href;\n            } catch (e) {\n                // Not friendly :(\n            }\n\n            // prefer the frame referrer (at least the same as the origin site) over the ad server url\n            if (document.referrer) return document.referrer;\n            return document.referrer;\n        }\n\n        // Direct on page or frame is goofy\n        return window.location.href\n    }\n\n    //endregion\n\n    //region User Interface\n\n    okanjo.ui = {\n\n        /**\n         * Gets the current page scroll position\n         * @returns {{x: Number, y: Number}}\n         */\n        getScrollPosition: () => {\n            return {\n                x: SUPPORTS_PAGE_OFFSET ? window.pageXOffset : /* istanbul ignore next: old browsers */ CSS1_COMPATIBLE ? document.documentElement.scrollLeft : document.body.scrollLeft,\n                y: SUPPORTS_PAGE_OFFSET ? window.pageYOffset : /* istanbul ignore next: old browsers */ CSS1_COMPATIBLE ? document.documentElement.scrollTop : document.body.scrollTop\n            };\n        },\n\n        /**\n         * Gets the height and width of the given element\n         * @param {HTMLElement|Node} element – The DOM element to get the size of\n         * @param {boolean} [includeMargin] – Whether to include the margins of the element in the size\n         * @returns {{height: number, width: number}}\n         */\n        getElementSize: (element, includeMargin) => {\n            const size = {\n                height: element.offsetHeight,\n                width : element.offsetWidth\n            };\n            const style = element.currentStyle || window.getComputedStyle(element);\n\n            if (includeMargin) {\n                size.height += parseInt(style.marginTop) + parseInt(style.marginBottom);\n                size.width += parseInt(style.marginLeft) + parseInt(style.marginRight);\n            }\n\n            return size;\n        },\n\n        /**\n         * Gets the current page size\n         * @return {{w: number, h: number}}\n         */\n        getPageSize: () => {\n            const body = document.querySelector('body');\n            const html = document.documentElement;\n\n            return {\n                w: Math.max(\n                    body.scrollWidth,\n                    body.offsetWidth,\n                    html.clientWidth,\n                    html.scrollWidth,\n                    html.offsetWidth\n                ),\n\n                h: Math.max(\n                    body.scrollHeight,\n                    body.offsetHeight,\n                    html.clientHeight,\n                    html.scrollHeight,\n                    html.offsetHeight\n                )\n            };\n        },\n\n        /**\n         * Gets the current viewport size\n         * @return {{vw: number, vh: number}}\n         */\n        getViewportSize: () => {\n            const element = CSS1_COMPATIBLE ? document.documentElement : /* istanbul ignore next: browser diffs */ document.body;\n            const width = element.clientWidth;\n            const height = element.clientHeight;\n            const inWidth = window.innerWidth || /* istanbul ignore next: browser diffs */ 0;\n            const inHeight = window.innerHeight || /* istanbul ignore next: browser diffs */ 0;\n            const isMobileZoom = (inWidth && width > inWidth) || (inHeight && height > inHeight);\n\n            return {\n                vw: isMobileZoom ? /* istanbul ignore next: browser diffs */ inWidth : width,\n                vh: isMobileZoom ? /* istanbul ignore next: browser diffs */ inHeight : height\n            };\n        },\n\n        /**\n         * Gets the x, y location of the event relative to the page\n         * @param event – Mouse/Touch Event\n         * @return {{ex: number, ey: number}}\n         */\n        getEventPosition: (event) => {\n            const ex = event.pageX;\n            const ey = event.pageY;\n            const body = document.body;\n            const el = document.documentElement;\n            const scrollLeft = 'scrollLeft';\n            const scrollTop = 'scrollTop';\n            const type = event.__proto__.constructor.name;\n\n            return {\n                et: type, // mouse? touch? keyboard? robot?\n                ex: ex === undefined /* istanbul ignore next: browser diffs */ ? event.clientX + body[scrollLeft] + el[scrollLeft] : ex,\n                ey: ey === undefined /* istanbul ignore next: browser diffs */ ? event.clientY + body[scrollTop] + el[scrollTop] : ey\n            };\n        },\n\n        /**\n         * Gets the element's rectangle coordinates on the page\n         * @param element\n         * @return {{x1: number, y1: number, x2: number, y2: number}}\n         */\n        getElementPosition: (element) => {\n\n            // Wrapped in try-catch because IE is super strict about the\n            // element being on the DOM before you call this. Other browsers\n            // let it slide, but oh well.\n\n            const err = 'Could not get position of element. Did you attach the element to the DOM before initializing?';\n            try {\n                let rect = element.getBoundingClientRect();\n                let body = document.body.getBoundingClientRect();\n                // let pos = okanjo.ui.getScrollPosition();\n\n                /* istanbul ignore else: jsdom doesn't mock this */\n                if (!document.body.contains(element)) {\n                    okanjo.report(err, element);\n                }\n                return {\n                    // x1: rect.left + pos.x,\n                    // y1: rect.top + pos.y,\n                    // x2: rect.right + pos.x,\n                    // y2: rect.bottom + pos.y\n\n                    // This might fix\n                    x1: rect.left - body.left,\n                    y1: rect.top - body.top,\n                    x2: rect.right - body.left,\n                    y2: rect.bottom - body.top,\n\n                };\n            } catch (e) {\n                okanjo.report(err, { exception: e, element });\n                return {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                    err: 1\n                };\n            }\n        },\n\n        /**\n         * Gets the intersection information given the element, viewport and scroll positions\n         * @param e – Element position\n         * @param s - Scroll position\n         * @param v - Viewport size\n         * @return {{intersectionArea: number, elementArea: number}}\n         * @private\n         */\n        _getIntersection: (e, s, v) => {\n            let iLeft = Math.max(e.x1, s.x),\n                iRight = Math.min(e.x2, s.x+v.vw),\n                iTop = Math.max(e.y1, s.y),\n                iBottom = Math.min(e.y2, s.y+v.vh),\n\n                intersectionArea = Math.max(0, iRight - iLeft) * Math.max(0, iBottom - iTop),\n                elementArea = (e.x2 - e.x1) * (e.y2 - e.y1);\n\n            return {\n                intersectionArea,\n                elementArea\n            };\n        },\n\n        /**\n         * Checks whether the element is actually displayed on the DOM\n         * @param element\n         * @return {boolean}\n         */\n        isElementVisible: (element) => {\n            /* istanbul ignore next: jsdom won't trigger this */\n            return element.offsetWidth > 0 && element.offsetHeight > 0;\n        },\n\n        /**\n         * Gets the percentage of the element pixels currently within the viewport\n         * @param {HTMLElement|Node} element\n         * @return {number}\n         */\n        getPercentageInViewport: (element) => {\n            let e = okanjo.ui.getElementPosition(element),\n                s = okanjo.ui.getScrollPosition(),\n                v = okanjo.ui.getViewportSize();\n\n            // If there was a problem getting the element position, fail fast\n            if (e.err) return 0;\n\n            // Get intersection rectangle\n            let { intersectionArea, elementArea } = okanjo.ui._getIntersection(e,s,v);\n\n            // Don't let it return NaN\n            /* istanbul ignore else: jsdom no love positional data */\n            if (elementArea <= 0) return 0;\n\n            /* istanbul ignore next: jsdom no love positional data, area tested with helper fn tho */\n            return intersectionArea / elementArea;\n        }\n    };\n\n    /**\n     * Splits the text in the element to fit within the visible height of its container, and separates with an ellipses\n     * @param {HTMLElement|Node} element – The DOM element containing the text to fit\n     * @param {HTMLElement} [container] – Optional container to compute fit on. Defaults to the element's parent\n     */\n    okanjo.ui.ellipsify = function(element, container) {\n\n        // It's a sad day when you have to resort to JS because CSS kludges are too hacky to work down to IE8, programmatically\n\n        //noinspection JSValidateTypes\n        const parent = container || element.parentNode,\n            targetHeight = okanjo.ui.getElementSize(parent).height,\n            useTextContent = element.textContent !== undefined;\n\n        let text = useTextContent ? element.textContent : /* istanbul ignore next: browser diffs */ element.innerText,\n            replacedText = \"\",\n            safety = 5000, // Safety switch to bust out of the loop in the event something goes terribly wrong\n            replacer = /* istanbul ignore next: n/a to jsdom */ (match) => {\n                replacedText = match.substring(0, match.length-3) + replacedText;\n                return '...';\n            };\n\n        // Trim off characters until we can fit the text and ellipses\n        // If the text already fits, this loop is ignored\n        /* istanbul ignore next: jsdom doesn't do element size computing stuff */\n        while (okanjo.ui.getElementSize(element).height > targetHeight && text.length > 0 && (safety-- > 0)) {\n            text = useTextContent ? element.textContent : element.innerText;\n\n            text = text.replace(ELLIPSIFY_PATTERN, replacer);\n\n            if (useTextContent) {\n                element.textContent = text;\n            } else {\n                element.innerText = text;\n            }\n        }\n\n        // If there is work to do, split the content into two span tags\n        // Like so: [content]...[hidden content]\n        /* istanbul ignore if: n/a to jsdom */\n        if (replacedText.length > 0) {\n\n            let content = document.createElement('span'),\n                span = document.createElement('span');\n\n            content.setAttribute('class','okanjo-ellipses');\n            span.setAttribute('class','okanjo-visually-hidden');\n\n            if (useTextContent) {\n                content.textContent = text.substring(0, text.length-3);\n                span.textContent = replacedText;\n            } else {\n                content.innerText = text.substring(0, text.length-3);\n                span.innerText = replacedText;\n            }\n\n            element.innerHTML = '';\n            element.appendChild(content);\n            element.appendChild(span);\n        }\n\n    };\n\n    /**\n     * Locates images with the class okanjo-fit and ensures that they get filled.\n     * This is basically a object-fit hacky workaround\n     * @param element\n     */\n    okanjo.ui.fitImages = function(element) {\n        // Detect objectFit support\n        /* istanbul ignore if: jsdom has objectFit defined and refuses to let you hack it */\n        if (!('objectFit' in document.documentElement.style)) {\n            // Find images to fit\n            element.querySelectorAll('img.okanjo-fit').forEach((img) => {\n\n                // Hide the image\n                img.style.display = 'none';\n\n                // Update the parent w/ the background\n                let parent = img.parentNode;\n                parent.style.backgroundSize = 'cover';\n                parent.style.backgroundImage = 'url('+img.src+')';\n                parent.style.backgroundposition = 'center center';\n            });\n        }\n    };\n\n    /**\n     * Returns the SVG content for an article icon\n     * @return {string}\n     */\n    okanjo.ui.articleSVG = function() {\n        return `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 48\" style=\"enable-background:new 0 0 48 48;\" xml:space=\"preserve\"> <g id=\"newspaper_1_\"> <g id=\"newspaper_2_\"> <path id=\"newspaper_6_\" d=\"M21.5,23h-5c-0.276,0-0.5-0.224-0.5-0.5v-5c0-0.276,0.224-0.5,0.5-0.5h5c0.276,0,0.5,0.224,0.5,0.5v5 C22,22.776,21.776,23,21.5,23z M37,32c0,1.654-1.346,3-3,3h-2H15c-1.654,0-3-1.346-3-3V14c0-0.552,0.448-1,1-1h17 c0.552,0,1,0.448,1,1v18c0,0.552,0.449,1,1,1h2c0.551,0,1-0.448,1-1V17h-1v14.75c0,0.138-0.112,0.25-0.25,0.25h-1.5 C32.112,32,32,31.888,32,31.75V16c0-0.552,0.448-1,1-1h3c0.552,0,1,0.448,1,1v1V32z M15,33h14.184C29.072,32.686,29,32.352,29,32 V15H14v17C14,32.552,14.449,33,15,33z M26.5,19h-2c-0.276,0-0.5-0.224-0.5-0.5v-1c0-0.276,0.224-0.5,0.5-0.5h2 c0.276,0,0.5,0.224,0.5,0.5v1C27,18.776,26.776,19,26.5,19z M26.5,23h-2c-0.276,0-0.5-0.224-0.5-0.5v-1c0-0.276,0.224-0.5,0.5-0.5 h2c0.276,0,0.5,0.224,0.5,0.5v1C27,22.776,26.776,23,26.5,23z M26.5,27h-10c-0.276,0-0.5-0.224-0.5-0.5v-1 c0-0.276,0.224-0.5,0.5-0.5h10c0.276,0,0.5,0.224,0.5,0.5v1C27,26.776,26.776,27,26.5,27z M26.5,31h-10 c-0.276,0-0.5-0.224-0.5-0.5v-1c0-0.276,0.224-0.5,0.5-0.5h10c0.276,0,0.5,0.224,0.5,0.5v1C27,30.776,26.776,31,26.5,31z\"/> </g> </g> </svg>`;\n    };\n\n    /**\n     * Returns the SVG content for a product icon\n     * @return {string}\n     */\n    okanjo.ui.productSVG = function () {\n        return `<svg id=\"glyphicons-basic\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"> <path id=\"cart\" d=\"M13,26.5A1.5,1.5,0,1,1,11.5,25,1.5,1.5,0,0,1,13,26.5ZM21.5,25A1.5,1.5,0,1,0,23,26.5,1.5,1.5,0,0,0,21.5,25ZM27.96436,8.82544l-2,9A1.49988,1.49988,0,0,1,24.5,19H11.77l.4375,2H23a1,1,0,0,1,1,1v1a1,1,0,0,1-1,1H11a1.5,1.5,0,0,1-1.46533-1.17944L6.29248,8H4A1,1,0,0,1,3,7V6A1,1,0,0,1,4,5H7.5A1.49993,1.49993,0,0,1,8.96533,6.17944L9.14484,7H26.5a1.50029,1.50029,0,0,1,1.46436,1.82544ZM24.62988,10H9.80115l1.31256,6H23.29688Z\"/></svg>`;\n    }\n\n    /**\n     * Returns the inline SVG src attribute\n     * @param svg\n     * @return {string}\n     */\n    okanjo.ui.inlineSVG = function(svg) {\n        return 'data:image/svg+xml;base64,' + btoa('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>' + svg);\n    };\n\n    //endregion\n\n    // Export the root namespace\n    return window.okanjo = okanjo;\n\n})(window, document);","\"use strict\";\n\n(function(window) {\n\n    const JSON_TEST = /^application\\/json/;\n    const okanjo = window.okanjo;\n\n    /**\n     * Performs a reliable XHR request\n     * @param {string} method - Request method\n     * @param {string} url - URL\n     * @param [payload] optional payload\n     * @param callback Fired on when completed (err, res), normalized to standard response format\n     */\n    okanjo.net.request = function (method, url, payload, callback) {\n\n        // payload is not required\n        if (typeof payload === \"function\") {\n            callback = payload;\n            payload = undefined;\n        }\n\n        // Create a new instance\n        const req = new (window.XMLHttpRequest || /* istanbul ignore next: old ie */ window.ActiveXObject)('MSXML2.XMLHTTP.3.0');\n\n        // Flag to prevent duplicate callbacks / races\n        let calledBack = false;\n\n        // Normalized done handler\n        const done = function(err, res) {\n            /* istanbul ignore else: out of scope */\n            if (!calledBack) {\n                calledBack = true;\n                callback(err, res);\n            }\n        };\n\n        // Apply timeout if configured globally\n        if (okanjo.net.request.timeout) {\n            req.timeout = okanjo.net.request.timeout;\n        }\n\n        // Catch timeout errors\n        req.ontimeout = function(e) {\n            /* istanbul ignore next: idk if jsdom can mock this, also readystatechange may fire before this anyway */\n            done({\n                statusCode: 504,\n                error: \"Request timed out\",\n                message: 'Something went wrong',\n                attributes: {\n                    event: e,\n                    xhr: req\n                }\n            });\n        };\n\n        // Handle the response\n        req.onreadystatechange = function(e) {\n            // 4 = completed / failed\n            if (req.readyState === 4) {\n                // Do we have a response?\n                if (req.status > 0) {\n                    let res;\n\n                    // Check if we got JSON and parse it right away\n                    if (JSON_TEST.test(req.getResponseHeader('Content-Type'))) {\n                        res = JSON.parse(req.responseText);\n                    } else {\n                        // Not JSON, normalize it instead\n                        res = {\n                            statusCode: req.status,\n                            data: req.responseText\n                        };\n                    }\n\n                    // Put the response in the proper slot (err for non success responses)\n                    if (req.status >= 200 && req.status < 300) {\n                        done(null, res);\n                    } else {\n                        done(res);\n                    }\n                } else {\n                    // Request failed - e.g. CORS or network issues\n                    done({\n                        statusCode: 503,\n                        error: \"Request failed\",\n                        message: 'Something went wrong',\n                        attributes: {\n                            event: e,\n                            xhr: req\n                        }\n                    });\n                }\n            }\n        };\n\n        // Open the request\n        req.open(method.toUpperCase(), url);\n\n        // Include credentials\n        req.withCredentials = true;\n\n        // Handle post payloads\n        if (['POST','PUT','PATCH'].includes(method.toUpperCase())) {\n            req.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n            if (payload !== undefined) {\n                payload = JSON.stringify(payload);\n            }\n        }\n\n        // Ship it\n        req.send(payload || undefined);\n    };\n\n    // Bind helpers to make things easy as pie\n    okanjo.net.request.get = okanjo.net.request.bind(this, 'GET');\n    okanjo.net.request.post = okanjo.net.request.bind(this, 'POST');\n    okanjo.net.request.put = okanjo.net.request.bind(this, 'PUT');\n    okanjo.net.request.delete = okanjo.net.request.bind(this, 'DELETE');\n\n    /**\n     * Helper to aid in minificiation+querystringify and redundant encodeURIComponent stuff\n     * @param val\n     * @return {*}\n     */\n    const encode = (val) => {\n        if (val === null || val === undefined) return '';\n        return encodeURIComponent(''+val);\n    };\n\n    /**\n     * Helper to aid in getting a query string key using a prefix and keyname\n     * @param key\n     * @param keyPrefix\n     * @return {*}\n     */\n    const getKey = (key, keyPrefix) => {\n        if (keyPrefix) {\n            return `${keyPrefix}[${encode(key)}]`;\n        } else {\n            return encode(key)\n        }\n    };\n\n    /**\n     * Super basic querystringify helper. It handles deep objects, but not for array values\n     * @param obj\n     * @param [keyPrefix]\n     * @return {string}\n     */\n    okanjo.net.request.stringify = (obj, keyPrefix) => {\n        let pairs = [];\n        keyPrefix = keyPrefix || \"\";\n        Object.keys(obj).forEach((key) => {\n            let value = obj[key];\n            if (Array.isArray(value)) {\n                value.forEach((v) => pairs.push(getKey(key, keyPrefix) + '=' + encode(v))); // Does not do that PHP garbage with key[]=val\n            } else if (typeof value === \"object\" && value !== null) {\n                // Recurse\n                let res = okanjo.net.request.stringify(value, getKey(key, keyPrefix));\n                if (res) pairs.push(res);\n            } else if (value !== undefined) {\n                pairs.push(getKey(key, keyPrefix) + '=' + encode(value));\n            }\n        });\n        return pairs.join('&');\n    };\n\n})(window);","\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS\n(function(window, document) {\n\n    /**\n     * Okanjo cookie utility helpers\n     */\n    window.okanjo.util.cookie = {\n\n        /**\n         * Sets a cookie\n         * @param cookieName\n         * @param value\n         * @param expireDays\n         */\n        set: (cookieName, value, expireDays) => {\n            const expireDate = new Date();\n            expireDate.setDate(expireDate.getDate() + expireDays);\n            const expires = expireDays ? \" Expires=\" + expireDate.toUTCString() + \";\" : \"\";\n            const path = \" Path=/\";\n            const secure = window.location.protocol === 'https:' ? ' Secure;' : '';\n            // const secure = ' Secure;';\n            const cookieValue = `${encodeURI(value)};${expires}${secure} SameSite=None;${path}`;\n            // console.log('setting cookie', cookieName, cookieValue)\n            document.cookie = cookieName + \"=\" + cookieValue;\n        },\n\n        /**\n         * Gets a cookie\n         * @param cookieName\n         * @return {*}\n         */\n        get: (cookieName) => {\n            let output = null;\n            document.cookie\n                .split(\";\")\n                .find((cookie) => {\n                    let nameTest = cookie.substr(0, cookie.indexOf(\"=\")).trim();\n                    let value = cookie.substr(cookie.indexOf(\"=\") + 1);\n                    if (nameTest === cookieName) {\n                        output = decodeURI(value);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                })\n            ;\n            return output;\n        }\n    };\n\n})(window, document);","\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n(function(window, document) {\n\n    const okanjo = window.okanjo;\n\n    /**\n     * Event tracking class\n     * @type {Metrics}\n     */\n    class Metrics {\n\n        //noinspection JSUnusedGlobalSymbols\n        constructor() {\n\n            /**\n             * Events queued here before submission\n             * @type {Array}\n             * @private\n             */\n            this._queue = this._getStoredQueue();\n            this._processTimeout = null; // queue event loop timeout pointer\n\n            /**\n             * Unique page grouping event identifier\n             */\n            this.pageId = okanjo.util.shortid();\n            this.defaultChannel = Metrics.Channel.external;\n\n            this.sid = null;\n            this.sourceCh = null;\n            this.sourceCx = null;\n\n            // Extract referral data, if set\n            this._checkUrlForReferral();\n\n            // TODO - look into iframe session correlation system\n        }\n\n        //noinspection JSMethodCanBeStatic\n        /**\n         * Gets the storage backed metric queue, in case we did not send everything last time\n         * @return {Array}\n         * @private\n         */\n        _getStoredQueue() {\n            if (window.localStorage[Metrics.Params.queue]) {\n                try {\n                    let queue = JSON.parse(window.localStorage[Metrics.Params.queue]);\n                    if (Array.isArray(queue)) {\n                        return queue;\n                    } else {\n                        okanjo.report('Stored queue is not a queue', {queue});\n                        return [];\n                    }\n                } catch (e) {\n                    okanjo.report('Failed to load metric queue from storage', {err: e});\n                    return [];\n                }\n            } else {\n                // not stored\n                return [];\n            }\n        }\n\n        /**\n         * Updates the queue stored in storage, in the event we can't complete our submissions\n         * @param delay - Whether to delay updating the queue for a bit, to let other metrics pile in\n         * @private\n         */\n        _saveQueue(delay) {\n            if (delay) {\n                if (this._saveQueueTimeout) clearTimeout(this._saveQueueTimeout);\n                this._saveQueueTimeout = setTimeout(() => {\n                    this._saveQueue(false);\n                    this._saveQueueTimeout = null;\n                }, 100);\n            } else {\n                window.localStorage[Metrics.Params.queue] = JSON.stringify(this._queue);\n            }\n        }\n\n        /**\n         * Extract contextual pass-through data from the URL, if present\n         * @private\n         */\n        _checkUrlForReferral() {\n            const pageArgs = okanjo.util.getPageArguments(true),\n                urlSid = pageArgs[Metrics.Params.name],\n                localSid = window.localStorage[Metrics.Params.name] || okanjo.util.cookie.get(Metrics.Params.name), // pull from storage or cookie\n                sourceContext = pageArgs[Metrics.Params.context],\n                sourceChannel = pageArgs[Metrics.Params.channel];\n\n            // If for some reason, both are set, record the incident as a possible correlation\n            if (urlSid && localSid && urlSid !== localSid) {\n                this.trackEvent({\n                    object_type: Metrics.Object.metric_session,\n                    event_type: Metrics.Event.correlation,\n                    id: urlSid+\"_\"+localSid,\n                    ch: this.defaultChannel,\n                    _noProcess: true\n                });\n            }\n\n            // Update local values\n            this.sid = localSid || urlSid || null; // prefer local over remote (changed in 1.0)\n            this.sourceCh = sourceChannel || null;\n            this.sourceCx = sourceContext || null;\n        }\n\n        /**\n         * Submits an individual event metric\n         * @param event\n         * @param callback\n         */\n        trackEvent(event, callback) {\n            // Ensure the event contains the required fields\n            if (!event.object_type || !event.event_type) {\n                okanjo.report('Invalid metric to track (missing object_type or event_type)', {event});\n                return;\n            }\n\n            // Queue the event for publishing\n            this._push(event, callback);\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Submits a page view metric\n         * @param event\n         * @param callback\n         */\n        trackPageView(event, callback) {\n            event = event || {};\n            event.object_type = Metrics.Object.page;\n            event.event_type = Metrics.Event.view;\n            event.id = event.id || okanjo.util.getLocation();\n            event.ch = event.ch || this.defaultChannel;\n\n            // Queue the event for publishing\n            this.trackEvent(event, callback);\n        }\n\n        /**\n         * Adds an event to the queue\n         * @param event\n         * @param callback\n         * @private\n         */\n        _push(event, callback) {\n            this._queue.push({ event, callback });\n\n            // Save the queue\n            this._saveQueue(true);\n\n            // Start burning down the queue, unless the event says not to\n            if (event._noProcess) {\n                delete event._noProcess;\n            } else {\n                this._processQueue();\n            }\n        }\n\n        /**\n         * Burn down the queue\n         * @private\n         */\n        _processQueue() {\n            // If the queue is not already being processed, and there's stuff to process, continue sending them\n            if (!this._processTimeout && this._queue.length > 0) {\n                this._processTimeout = setTimeout(() => {\n\n                    // Pull the items we're going to batch out of the queue\n                    const items = this._queue.splice(0, 255);\n                    this._saveQueue(false);\n\n                    // Track the item\n                    this._batchSend(items, (err, res) => {\n                        // TODO: If there was an error, consider splicing the batch back into the queue\n\n                        // Update / Set the metric sid on the publisher\n                        /* istanbul ignore else: server barks */\n                        if (res && res.data && res.data.sid) this._updateSid(res.data.sid);\n\n                        // When this batch is done being tracked, iterate to the next metric then fire it's callback if set\n                        this._processTimeout = null;\n                        this._processQueue();\n\n                        // Fire the event callbacks if there are any\n                        items.forEach((item) => {\n                            item.callback && item.callback(err, res);\n                        });\n                    });\n\n                }, 0); // break event loop, maybe\n            }\n        }\n\n        /**\n         * Sends a bunch of queued metric events\n         * @param items\n         * @param callback\n         * @private\n         */\n        _batchSend(items, callback) {\n\n            // Normalize event data\n            const events = items.map((item) => {\n                this._normalizeEvent(item.event);\n\n                // Strip duplicated data from event batch\n                delete item.event.sid;\n                delete item.event.win;\n\n                return item.event;\n            });\n\n            const payload = {\n                events,\n                win: okanjo.util.getLocation()\n            };\n\n            const route = okanjo.net.getRoute(okanjo.net.routes.metrics_batch);\n\n            // Set sid if present\n            if (this.sid) {\n                payload.sid = this.sid;\n            }\n\n            // Send it\n            okanjo.net.request.post(\n                route,\n                payload,\n                (err, res) => {\n                    /* istanbul ignore if: out of scope */\n                    if (err) {\n                        okanjo.report('Failed to send metrics batch', { err, res, items, route });\n                    }\n                    callback && callback(err, res);\n                }\n            );\n        }\n\n        /**\n         * Normaizes events so that they contain consistent data values\n         * @param event\n         * @private\n         */\n        _normalizeEvent(event) {\n\n            // Ensure meta is ready to receive values\n            event.m = event.m || {};\n\n            // Set key\n            event.key = event.key || event.m.key || okanjo.key || undefined;\n\n            // Set session\n            if (this.sid) event.sid = this.sid;\n\n            // Clone the metadata, since it might be a direct reference to a widget property\n            // Deleting properties on the meta object, could be very destructive\n            event.m = Object.assign({}, event.m); // event.m should be flat\n\n            // Strip meta keys that should be excluded\n            // Object.keys(Metrics.Meta.exclude).forEach((key) => delete event.m[key]);\n            // ^ this is now done after flattening as an include-only model in v3.x+\n\n            // Set referral channel / context\n            if (this.sourceCh) { event.m.ref_ch = this.sourceCh; }\n            if (this.sourceCx) { event.m.ref_cx = this.sourceCx; }\n\n            // Set page group id\n            event.m.pgid = this.pageId;\n\n            // Set okanjo version\n            event.m.ok_ver = okanjo.version;\n\n            // Finalize metadata\n            event.m = okanjo.util.flatten(event.m, { arrayToCsv: true });\n\n            // Only send allowed meta keys - rest will get stripped\n            const allowedKeys= new Set(Metrics.Meta.include);\n            Object.keys(event.m).forEach(key => {\n                if (!allowedKeys.has(key)) delete event.m[key];\n            });\n\n            // Ensure metadata strings won't exceed the imposed limit\n            Object.keys(event.m).forEach((key) => {\n                if (typeof event.m[key] === \"string\") {\n                    event.m[key] = event.m[key].substr(0, 255);\n                }\n            });\n\n            // Set page source reference\n            /* istanbul ignore else: jsdom setup with referrer */\n            if (document.referrer) {\n                event.ref = document.referrer;\n            }\n\n             // Set the window location\n            event.win = okanjo.util.getLocation();\n        }\n\n        /**\n         * Updates the stored session identifier\n         * @param sid\n         * @private\n         */\n        _updateSid(sid) {\n            // Not set or changed?\n            if (sid && (!this.sid || this.sid !== sid) ) {\n                this.sid = sid;\n                window.localStorage[Metrics.Params.name] = sid;\n                okanjo.util.cookie.set(Metrics.Params.name, sid, Metrics.Params.ttl);\n            }\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds DOM element dimensions / positional data to the event\n         * @param element\n         * @param event\n         * @return {*|{}}\n         */\n        static addElementInfo(element, event) {\n            const page = okanjo.ui.getPageSize(),\n                size = okanjo.ui.getElementPosition(element);\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.pw = page.w;\n            event.m.ph = page.h;\n            event.m.x1 = size.x1;\n            event.m.y1 = size.y1;\n            event.m.x2 = size.x2;\n            event.m.y2 = size.y2;\n\n            return event;\n        }\n\n        static addWidgetInfo(element, event) {\n            const containerSize = okanjo.ui.getElementPosition(element);\n\n            event = event || {};\n            event.m = event.m || {};\n\n            // placement div size\n            event.m.wox1 = containerSize.x1;\n            event.m.woy1 = containerSize.y1;\n            event.m.wox2 = containerSize.x2;\n            event.m.woy2 = containerSize.y2;\n\n            // Inner size is the min/max of the child elements since they may be floating and have no official height/width\n            const resources = okanjo.qwery('.okanjo-resource, .okanjo-adx-container', element);\n            let size, wix1, wiy1, wix2, wiy2, boxes = [];\n            const getMin = (val, current) => typeof current === \"undefined\" || val < current ? val : current;\n            const getMax = (val, current) => typeof current === \"undefined\" || val > current ? val : current;\n            const fallback = (val, fallback) => typeof val === \"undefined\" ? fallback : val;\n\n            resources.forEach(e => {\n                size = okanjo.ui.getElementPosition(e);\n                wix1 = getMin(size.x1, wix1);\n                wiy1 = getMin(size.y1, wiy1);\n                wix2 = getMax(size.x2, wix2);\n                wiy2 = getMax(size.y2, wiy2);\n                boxes.push(size.x1, size.y1, size.x2, size.y2);\n            });\n\n            // inner size (might be centered or something)\n            // noinspection JSUnusedAssignment\n            event.m.wix1 = fallback(wix1, containerSize.x1); // noinspection JSUnusedAssignment\n            event.m.wiy1 = fallback(wiy1, containerSize.y1); // noinspection JSUnusedAssignment\n            event.m.wix2 = fallback(wix2, containerSize.x2); // noinspection JSUnusedAssignment\n            event.m.wiy2 = fallback(wiy2, containerSize.y2);\n            event.m.wrps = boxes.map(v => Math.floor(v)).join(','); // all resource positions x1,y1,x2,y2,...\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds viewport dimensions / positional data to the event\n         * @param event\n         * @return {*|{}}\n         */\n        static addViewportInfo(event) {\n            const vp = okanjo.ui.getViewportSize(),\n                pos = okanjo.ui.getScrollPosition();\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.vx1 = pos.x;\n            event.m.vy1 = pos.y;\n            event.m.vx2 = pos.x+vp.vw;\n            event.m.vy2 = pos.y+vp.vh;\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds DOM event positional data to the event\n         * @param jsEvent\n         * @param event\n         * @return {*|{}}\n         */\n        static addEventInfo(jsEvent, event) {\n            const pos = okanjo.ui.getEventPosition(jsEvent);\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.et = pos.et;\n            event.m.ex = pos.ex;\n            event.m.ey = pos.ey;\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds meta data values to the event\n         * @param event\n         * @param args\n         * @return {*|{}}\n         */\n        static addEventMeta(event, ...args) {\n            event = event || {};\n            event.m = event.m || {};\n            event.m = Object.assign.apply(Object, [event.m].concat(args));\n            \n            return event;\n        }\n\n        /**\n         * Helper to create a new fluent event structure\n         * @param data\n         * @param args\n         * @return {MetricEvent}\n         */\n        static create(data, ...args) {\n            // return okanjo.util.deepClone(Object.assign.apply(Object, [{}].concat(args)));\n            return new MetricEvent(data, args);\n        }\n\n        //noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n        /**\n         * Helper to create a new fluent event structure\n         * @param args\n         * @return {*}\n         */\n        create(...args) {\n            return Metrics.create.apply(null, args);\n        }\n\n    }\n\n    /**\n     * The storage/cookie/url param names\n     * @type {{queue: string, name: string, channel: string, context: string, ttl: number}}\n     */\n    Metrics.Params = {\n        queue: '_ok_q',\n        name: 'ok_msid',\n        channel: 'ok_ch',\n        context: 'ok_cx',\n        ttl: 1460 // 4 years\n    };\n\n    /**\n     * Event Metadata configuration\n     * @type {{exclude: [*], include: [*]}}\n     */\n    Metrics.Meta = {\n        exclude: ['key','callback','metrics_channel_context','metrics_context','mode'],\n        include: [\n            'decl',\n            'ex', 'ey',\n            'filters_sort_by', 'filters_sort_direction', 'filters_take', 'filters_type', 'filters_url',\n            'ok_ver',\n            'ph', 'pw',\n            'pten', 'ptid',\n            'res_bf', 'res_length', 'res_sf', 'res_spltfl', 'res_type',\n            'bf', 'sf', 'spltfl_seg',\n            'vx1', 'vx2', 'vy1', 'vy2',\n            'pgid', 'wgid',\n            'wix1', 'wix2', 'wiy1', 'wiy2',\n            'wox1', 'wox2', 'woy1', 'woy2', 'wrps',\n            'x1', 'x2', 'y1', 'y2',\n\n            'cid', 'campaign_id', 'expandable', 'res_total'\n        ]\n    };\n\n    /**\n     * Event Types\n     * @type {{view: string, impression: string, interaction: string, correlation: string}}\n     */\n    Metrics.Event = {\n        view: 'vw',\n        impression: 'imp',\n        interaction: 'int',\n        correlation: 'cor'\n    };\n\n    /**\n     * Event Action Types\n     * @type {{click: string, inline_click: string}}\n     */\n    Metrics.Action = {\n        click: \"click\",\n        inline_click: \"inline_click\"\n    };\n\n    /**\n     * Event Object Types\n     * @type {{article: string, thirdparty_ad: string, cart: string, page: string, widget: string, product: string, store: string, cause: string, marketplace: string, order: string, order_item: string, user: string, metric_session: string}}\n     */\n    Metrics.Object = {\n        article: 'am',\n        thirdparty_ad: 'ta',\n        cart: 'ct',\n        page: 'pg',\n        widget: 'wg',\n        product: 'pr',\n        store: 'st',\n        cause: 'ca',\n        marketplace: 'mp',\n        order: 'or',\n        order_item: 'oi',\n        user: 'ur',\n        metric_session: 'mt'\n    };\n\n    /**\n     * Event Channels\n     * @type {{product_widget: string, ad_widget: string, store_widget: string, marketplace: string, external: string}}\n     */\n    Metrics.Channel = {\n        placement: 'pw',\n        marketplace: 'mp',\n        external: 'ex',\n\n        // Deprecated:\n        product_widget: 'pw',\n        ad_widget: 'aw',\n        store_widget: 'sw'\n    };\n\n    /**\n     * Event Environments\n     * @type {{live: string, testing: string}}\n     */\n    Metrics.Environment = {\n        live: \"live\",\n        testing: \"testing\"\n    };\n\n    /**\n     * Fluent wrapper around making events simple\n     */\n    class MetricEvent {\n        constructor(data, others) {\n            // Merge the data and other data sets into this object\n            data = data || {};\n            this.data(data);\n            /* istanbul ignore else: metrics.create is the only way to create this right now */\n            if (Array.isArray(others)) {\n                others.forEach((data) => {\n                    this.data(data);\n                });\n            }\n        }\n\n        /**\n         * Sets event parameter key-values\n         * @param data\n         */\n        data(data) {\n            Object.assign(this, okanjo.util.deepClone(data));\n            return this;\n        }\n\n        /**\n         * Adds DOM event positional data to the event\n         * @param jsEvent\n         * @return {MetricEvent}\n         */\n        event(jsEvent) {\n            Metrics.addEventInfo(jsEvent, this);\n            return this;\n        }\n\n        /**\n         * Adds viewport dimensions / positional data to the event\n         * @return {MetricEvent}\n         */\n        viewport() {\n            Metrics.addViewportInfo(this);\n            return this;\n        }\n\n        /**\n         * Adds DOM element dimensions / positional data to the event\n         * @param element\n         * @return {MetricEvent}\n         */\n        element(element) {\n            Metrics.addElementInfo(element, this);\n            return this;\n        }\n\n        /**\n         * Adds widget DOM element dimensions / positional data to the event\n         * @param element\n         * @returns {MetricEvent}\n         */\n        widget(element) {\n            Metrics.addWidgetInfo(element, this);\n            return this;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds meta data values to the event\n         * @param args\n         * @return {MetricEvent}\n         */\n        meta(...args) {\n            Metrics.addEventMeta.apply(null, [this].concat(args));\n            return this;\n        }\n\n        /**\n         * Sets the object and event type on the event w/o having to use .data\n         * @param object_type\n         * @param event_type\n         * @return {MetricEvent}\n         */\n        type(object_type, event_type) {\n            this.object_type = object_type;\n            this.event_type = event_type;\n            return this;\n        }\n\n        /**\n         * Finalizes and sends the event\n         * @param callback\n         */\n        send(callback) {\n            okanjo.metrics.trackEvent(this, callback);\n            // DONT RETURN - BREAK THE CHAIN HERE\n        }\n\n        /**\n         * Gets the single-metric tracking url for this event\n         * @return {string}\n         */\n        toUrl() {\n            // Copy data w/o modifying it\n            const event = Object.assign({}, this);\n\n            // Extract params\n            const {\n                object_type,\n                event_type\n            } = event;\n            delete event.object_type;\n            delete event.event_type;\n\n            // Normalize event data\n            okanjo.metrics._normalizeEvent(event);\n\n            // Get the URL\n            return okanjo.net.getRoute(okanjo.net.routes.metrics, { object_type, event_type }) + '?' +\n                okanjo.net.request.stringify(event);\n        }\n    }\n\n    // Export / initialize\n    okanjo.metrics = new Metrics();\n\n})(window, document);"],"sourceRoot":"./"}