{"version":3,"sources":["okanjo-metrics.js","Array.from.js","Array.prototype.find.js","Array.prototype.findIndex.js","Array.prototype.includes.js","NodeList.prototype.forEach.js","Object.Assign.js","Okanjo.js","Request.js","Cookie.js","Metrics.js"],"names":["root","factory","define","amd","exports","module","Array","this","_classCallCheck","Number","value","instance","Constructor","TypeError","_createClass","isCallable","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","defineProperties","prototype","_typeof","Symbol","iterator","obj","constructor","from","number","toStr","toString","fn","Math","call","maxSafeInteger","toLength","len","toInteger","isFinite","floor","abs","pow","items","arrayLike","min","max","C","mapFn","T","arguments","A","kValue","k","find","predicate","o","thisArg","findIndex","includes","searchElement","fromIndex","sameValueZero","x","y","isNaN","n","window","NodeList","forEach","callback","assign","varArgs","nextSource","to","index","nextKey","hasOwnProperty","okanjo","NOOP","document","SUPPORTS_PAGE_OFFSET","undefined","pageXOffset","CSS1_COMPATIBLE","compatMode","AGENT","navigator","userAgent","ELLIPSIFY_PATTERN","MOBILE_PATTERN","Console","console","settings","metrics","report","_len","args","_key","err","Error","messageIndex","arg","stack","split","shift","push","reportStack","join","filter","a","splice","error","version","warn","apply","concat","message","_len2","_key2","selector","parent","qwery","querySelector","querySelectorAll","net","endpoint","sandboxEndpoint","routes","ads","getRoute","route","params","env","request","keys","replace","util","isEmpty","test","val","trim","getPageArguments","query","eqIndex","includeHashArguments","decodeURIComponent","parts","part","indexOf","queryArgs","hashArgs","substring","location","search","hash","mixed","out","map","deepClone","options","output","input","isArray","toISOString","childObject","childKey","ignoreArrays","arrayToCsv","flatten","shortid","clusterWorkerId","shuffled","crypto","msCrypto","require","getRandomValues","randomBytes","encode","loopCounter","random","dest","Uint8Array","str","done","randomByte","REDUCE_TIME","seconds","counter","previousSeconds","Date","getTime","ui","getScrollPosition","documentElement","scrollLeft","body","getElementSize","element","scrollTop","includeMargin","size","height","offsetHeight","width","offsetWidth","style","currentStyle","getComputedStyle","parseInt","marginTop","marginBottom","getPageSize","marginLeft","marginRight","html","getViewportSize","scrollWidth","clientWidth","clientHeight","scrollHeight","vh","isMobileZoom","inWidth","innerWidth","inHeight","innerHeight","getEventPosition","ex","et","event","ey","el","type","__proto__","name","getElementPosition","clientX","clientY","rect","getBoundingClientRect","y2","x1","left","contains","y1","x2","top","right","bottom","e","exception","elementArea","iLeft","s","iRight","v","vw","iTop","iBottom","intersectionArea","getPercentageInViewport","_okanjo$ui$_getInters","_getIntersection","replacedText","container","substr","parentNode","targetHeight","useTextContent","textContent","text","innerText","safety","replacer","match","span","createElement","content","setAttribute","innerHTML","appendChild","method","url","payload","res","ActiveXObject","calledBack","req","timeout","ontimeout","attributes","statusCode","onreadystatechange","status","data","JSON_TEST","getResponseHeader","parse","responseText","xhr","toUpperCase","open","withCredentials","setRequestHeader","post","send","get","bind","encodeURIComponent","getKey","keyPrefix","stringify","pairs","expireDate","setDate","set","cookieName","expireDays","getDate","expires","toUTCString","path","encodeURI","cookie","cookieValue","nameTest","decodeURI","Metrics","sourceCh","_getStoredQueue","sourceCx","pageId","defaultChannel","Channel","external","sid","_checkUrlForReferral","queue","Params","JSON","localStorage","delay","_this","_saveQueueTimeout","clearTimeout","setTimeout","_saveQueue","_queue","object_type","metric_session","event_type","Event","correlation","id","urlSid","_noProcess","context","sourceChannel","pageArgs","channel","localSid","trackEvent","sourceContext","ch","_push","page","view","href","_processQueue","_this2","_processTimeout","_batchSend","_updateSid","item","_this3","events","win","metrics_batch","m","exclude","Meta","ok_ver","pgid","referrer","ref","ttl","_len3","_key3","pw","w","ph","h","vp","pos","vx1","vy1","vx2","vy2","jsEvent","_len4","_key4","_len5","_key5","MetricEvent","impression","interaction","Action","click","inline_click","article","thirdparty_ad","cart","order","order_item","user","widget","product","store","cause","marketplace","placement","live","testing","store_widget","Environment","others","_this4","_data","addEventInfo","addViewportInfo","_element","addElementInfo","_len6","_key6","addEventMeta","_normalizeEvent"],"mappings":";CACC,SAASA,EAAMC,GACQ,kBAAXC,SAAyBA,OAAOC,IACzCD,UAAWD,GACiB,gBAAZG,SAChBC,OAAOD,QAAUH,ICJrBD,EAAAM,OAAAL,KAEAM,KAAA,WAKA,QAAAC,GAAAC,EAAAC,GAAA,KAAAC,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAJA,GAAAC,GAAAC,WAAA,QAAAA,GAAAC,EAAAC,GAAA,IAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CAAA,GAAAE,GAAAH,EAAAC,EAAAE,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAAA,MAAA,UAAAR,EAAAe,EAAAC,GAAA,MAAAD,IAAAE,EAAAjB,EAAAkB,UAAAH,GAAAC,GAAAC,EAAAjB,EAAAgB,GAAAhB,MAEAmB,EAFA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAC,GAAA,aAAAA,IAAA,SAAAA,GAAA,MAAAA,IAAA,kBAAAF,SAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAF,UAAA,eAAAI,GAKA5B,OAAA8B,OACA9B,MAAA8B,KAAAC,WAAA,GAAAC,GAAAd,OAAAa,UAAAE,SAAAxB,EAAA,SAAAyB,GACA,MAAA,kBAAAH,IAAAA,sBAAAI,EAAAC,KAAAD,IAEAE,EAAAA,SAAAjC,GACAkC,GAAAA,GAAAnC,OAAAmC,EACA,OAAAC,OAAAC,GACAL,EDY2B,IAAXJ,GAAiBU,SAASV,ICP1CA,EAAA,EAAA,MAAAI,KAAAO,MAAAP,KAAAQ,IAAAZ,IAFAA,GDcYM,EAAiBF,KAAKS,IAAI,EAAG,IAAM,ECT/CN,EAAA,SAAAlC,GACA,GAAAyC,GAAAA,EAAAC,EDWY,OAAOX,MAAKY,IAAIZ,KAAKa,IAAIT,EAAK,GAAIF,GCN9C,OAAA,UAAAS,GAEA,GAAAG,GAAAhD,KAGA4C,EAAAK,OAAAJ,EAGA,IAAArC,MAAAqC,EACA,KAAA,IAAAvC,WAAAA,mEAIA,IACA4C,GADAD,EAAAE,UAAAvC,OAAA,EAAAuC,UAAA,GAAA,MAEA,IAAA,mBAAAF,GAAA,CAGA,IAAAzC,EAAAyC,GACA,KAAA,IAAA3C,WAAA,oEAIA6C,WAAAvC,OAAA,IACAsC,EAAAC,UAAA,IAkBAC,IAZA,GAWAC,GAXAf,EAAAD,EAAAO,EAAAhC,QAMAwC,EAFA5C,EAEAwC,GAAA/B,OAAA,GAAA+B,GAAAV,IAAA,GAAAvC,OAAAuC,GAGAgB,EAAAA,EAGA1C,EAAA0B,GACAe,EAAAT,EAAAU,GACAL,EAtDAG,EAAAE,GAAA,mBAAAJ,GAAAD,EAAAI,EAAAC,GAAAL,EAAAd,KAAAe,EAAAG,EAAAC,GAyDAF,EAAAE,GAAAD,EC5EA9B,GAAAgC,CAKA,OAFAH,GAAAxC,OAAA0B,EAEAc,OAKArD,MAAAwB,UAAAgC,MACAtC,OAAAC,eAAAN,MAAAW,UAAA,QFyFQpB,MAAO,SAAeqD,GEtF9B,GAAAA,MAAAxD,KACA,KAAA,IAAAM,WAAA,gCAGA,IAAAmD,GAAAxC,OAAAjB,MAGAsC,EAAAmB,EAAA7C,SAAA,CAGA,IAAA,kBAAA4C,GACA,KAAAF,IAAAhD,WAAA,+BAUAgD,KANA,GAAAI,GAAAP,UAAA,GAGAG,EAAA,EAGAA,EAAAA,GAAAA,CAKA,GAAAD,GAAAI,EAAAH,EAvCA,IAAAE,EAAArB,KAAAuB,EAAAL,EAAAC,EAAAG,GAyCA,MAAAJ,ECzCAnC,SASAnB,MAAAwB,UAAAoC,WACA1C,OAAAC,eAAAN,MAAAW,UAAA,aHqIQpB,MAAO,SAAeqD,GGlI9B,GAAAA,MAAAxD,KACA,KAAA,IAAAM,WAAA,gCAGA,IAAAmD,GAAAxC,OAAAjB,MAGAsC,EAAAmB,EAAA7C,SAAA,CAGA,IAAA,kBAAA4C,GACA,KAAAF,IAAAhD,WAAA,+BAUAgD,KANA,GAAAI,GAAAP,UAAA,GAGAG,EAAA,EAGAA,EAAAA,GAAAA,CAKA,GAAAD,GAAAI,EAAAH,EAvCA,IAAAE,EAAArB,KAAAuB,EAAAL,EAAAC,EAAAG,GAyCA,MAAAH,ECzCApC,KAIA,YJqLKnB,MAAMwB,UAAUqC,UI/KrB3C,OAAAC,eAAAnB,MAAAwB,UAAA,YACApB,MAAA,SAAA0D,EAAAC,GA4BA,QAAAC,GAAAC,EAAAC,GACA,MAAAD,KAAAC,GAAA,gBAAAD,IAAA,gBAAAC,IAAAC,MAAAF,IAAAE,MAAAD,GA3BA,GAAA,MAAAjE,KACAsC,KAAAA,IAAAhC,WAAA,gCAIA,IAAAmD,GAAAxC,OAAAjB,MJmLgBsC,EAAMmB,EAAE7C,SAAW,CI7KnC,IAAA,IAAA0B,EACA,OAAA,CAmBA,KAdA,GAAA6B,GAAA,EAAAL,EAOAR,EAAAS,KAAAA,IAAAA,GAAAN,EAAAU,EAAAN,EAAAA,KAAAnB,IAAAyB,GAAA,GAOAb,EAAAhB,GAAA,CA5CA,GAAAyB,EAAAN,EAAAH,GAAAO,GAgDA,OAAA,CChDAtC,KAIA,OAAA,KCJA6C,OAAAC,WAAAA,SAAA9C,UAAA+C,UACArD,SAAAC,UAAAA,QAAA,SAAAqD,EAAAb,GACAvD,EAAAuD,GAAAc,MAAA,KAAA,GAAA7D,GAAA,EAAAA,EAAAX,KAAAY,OAAAD,IACA4D,EAAApC,KAAAuB,EAAA1D,KAAAW,GAAAA,EAAAX,QAGA,kBAAAiB,QAAAuD,QAEAvD,OAAAC,eAAAD,OAAA,UNgPQd,MAAO,SAAgBM,EAAQgE,GM7OvC,YAEA,IAAAC,MAAAjE,EACA,KAAA,IAAAH,WAAA,6CAKA,KAAA,GAFAqE,GAAAA,OAAAA,GAEAC,EAAA,EAAAA,EAAAzB,UAAAvC,OAAAgE,IAAA,CACA,GAAAF,GAAAvB,UAAAyB,EAEA,IAAA,MAAAD,EAEA,IAvBA,GAAAE,KAAAH,GAAAzD,OAAAM,UAAAuD,eAAA3C,KAAAuC,EAAAG,KA0BAF,EAAAE,GAAAH,EAAAG,ICzBA,MAAAF,IPgRQ3D,UAAU,EACVD,cAAc,GOlQtB,IAAAgE,GAAAC,SAAAZ,EAAAa,GPmRI,GAAIC,GAA8CC,SAAvBf,EAAOgB,YO7QtCC,EAAA,gBAAAJ,EAAAK,YAAA,IP+QQC,EAAQnB,EAAOoB,UAAUC,UO7QjCC,EAAA,qBP+QQC,EAAiB,yCACjBX,EAAO,aO7QfY,EAAAxB,EAAAyB,QPiRQC,EAAW1B,EAAOW,WOjQ1BgB,GAKA5E,QAAA2E,QPmRQC,QAAS,KAKT5E,IAAK2E,EAAS3E,KAAO,KO/Q7B6E,OAAA,WAAA,IAAA,GAAAC,GAAA9C,UAAAvC,OAAAsF,EAAAnG,MAAAkG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IACAC,EAAAA,GAAAC,UAAAC,EAGA,IAAAF,GAAAF,EAAA3C,KAAA,SAAAgD,GACA,MAAAC,aAAAH,QAEAG,IAAAA,EP4RmB,COtRnBN,GAAAtF,IAAAgF,GAAAA,QAAAY,MAAAC,MAAAb,KPyRgBY,GAAME,QOvRtBF,EAAAE,QAvCAR,EAAAS,MAAAC,YAAAJ,EAAAK,KAAA,QPiUgBX,EAAOA,EAAKY,OAAO,SAAUC,GOvR7C,MAAAA,KAAAX,QAXAM,CACAR,GAAAA,GAAAU,EAAAA,UAAAC,SAAAN,GACAL,MAAA,gBAAAK,IAAAH,GAAA,GAAAC,OAAAH,EAAAI,IAAA,gBACAA,GAAA,GAAAJ,EAAAc,OAAAV,EAAA,GPoSYV,EAAQqB,MAAM,YAAclC,EAAOmC,QAAU,MAAQd,EAAII,OOvRrEW,EAAAvG,QAAAgF,EAAAqB,MAAAG,MAAAxB,GAAA,2BAAAyB,OAAAnB,KPkSQiB,KAAM,SAAcG,GO3R5B,IAAA,GAAAC,GAAApE,UAAAvC,OAAAsF,EAAAnG,MAAAwH,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAtB,EAAAsB,EAAA,GAAAC,UAAAC,EAGA,IAAAtB,GAAA,GAAAsB,OAAAJ,EP8RY1B,GAAQuB,KAAK,YAAcpC,EAAOmC,QAAU,MAAQd,EAAII,OO3RpEN,EAAAtF,QAAAgF,EAAAuB,KAAAC,MAAAxB,GAAA,2BAAAyB,OAAAnB,KAIAyB,MAAA,SAAAD,EAAAzC,GAGA,MAAA,gBAAAyC,KApEAA,EAAAzC,EAAA2C,cAAAF,KA2EAA,IAAAA,EAAAzC,GP8RmByC,EAAOG,iBAAiBJ;AAygBvC,MOzxBJ1C,GAAA+C,OPsSI/C,EAAO+C,KO3RXC,SAXA,0BP4SQC,gBAAiB,kCAKjBC,QACIC,IAAK,WACLnC,QAAS,oCO3RrBoC,cAAA,YAUAA,SAAA,SAAAC,EAAAC,EAAAC,GPmSY,MOlSZC,IAnCAtH,OAAAuH,KAAAH,GAAA/D,QAAA,SAAAnD,GPiUoBiH,EAAQA,EAAMK,QAAQ,IAAMtH,EAAKkH,EAAOlH,GAAO,MOzRnEmH,EAAAA,GAAAvD,EAAAuD,KAAA,QP6R4B,YAARA,EAAoBvD,EAAO+C,IAAIE,gBAAkBjD,EAAO+C,IAAIC,UAAYK,GAIpFG,QAASvD,GAYbD,EAAO2D,MOvRXC,QAAA,SAAAC,GAfA,MAAA,QAAAC,GAAA1D,SAAA0D,GAAA,gBAAAA,IAAA,IAAAA,EAAAC,OAAAlI,QAuBAmI,SAAAA,WAEA,MAAAtC,GAAAA,KAAAuC,IAOAD,iBAAAE,SAAAC,GAEA/I,GAAAA,GAAAA,SAAA6I,GACAA,EAHAA,GAGA,EACA7H,IAAAA,MACAhB,EAAAA,EAAAgJ,MAAAA,IAYA,OAXAC,GAAA9E,QAAA,SAAA+E,GACA,GAAAlI,GAAAkH,EAAAiB,QAAAnJ,KAVAgB,EAAA,OAYAkH,EAAA,MAhBAY,GAAA,GPiTwB9H,EAAMgI,mBAAmBE,GO9RjDE,EAAA9C,OAEA+C,EAAAA,mBAAAH,EAAAlI,UAAA,EAAA8H,IAAAM,EAAAA,mBAAApI,EAAAsI,UAAAR,EAAA,KPkSwB9H,IAAKkH,EAAOlH,GAAOhB,KO/R3CkI,GPoSgBkB,EAAY9C,EAAMrC,EAAOsF,SAASC,OAAOF,UAAUrF,EAAOsF,SAASC,OAAOL,QAAQ,KAAO,IOhSzGE,EAAAN,EAAAzC,EAAArC,EAAAsF,SAAAE,KAAAH,UAAAvH,KAAAa,IAAAqB,EAAAsF,SAAAE,KAAAN,QAAA,KAAA,EAAAlF,EAAAsF,SAAAE,KAAAN,QAAA,MAAA,OPsSY,OAJArI,QAAOuH,KAAKgB,GAAUlF,QAAQ,SAAUnD,GACpC,MAAOoI,GAAUpI,GAAOqI,EAASrI,KAG9BoI,IOxRnBtI,EAAAA,KAAAA,UAAA4I,SAAAA,EAAAC,GAiBA,MAhBAA,OAAAA,QAAAD,IAJAC,EAMAA,MACAA,EAAAA,EAAAzC,OAAAwC,EAAAE,IAAA,SAAAlB,GACAiB,MAAA/E,GAAA2D,KAAAsB,UAAAnB,OPqSqF,YAAhD,mBAAVgB,GAAwB,YAAcrI,EAAQqI,KAAkC,OAAVA,GOlTjGC,EAAAA,MPqTY7I,OAAOuH,KAAKqB,GAAOvF,QAAQ,SAAUnD,GOlSjD2I,EAAA3I,GAAA4D,EAAA2D,KAAAsB,UAAAH,EAAA1I,OPuSY2I,EAAMD,EOjSlBI,GAUAC,EAAAA,KAAAA,QAAAA,SAAAC,GACA,GAAAF,GAFA9G,UAEAvC,OAAA,GAAAuE,SAAAhC,UAAA,GAAAA,UAAA,MAEA+G,IAqCA,OAnCA/E,UAAAgF,GAAA,OAAAA,GACAlJ,OAAAuH,KAAAzI,GAAAqK,QAAAD,SAAAhJ,GAEA,GAAAgJ,EAFAhJ,YAEAiJ,MACAF,EAAA/I,UADA+I,EAEA/I,GAAAgJ,EAAAhJ,GAAAkJ,cAEAH,EAAAI,GAAAA,EAAAvF,OAIAmF,IAAAK,WAAAL,EAAA/I,EAAAA,KAAAoJ,OAAAD,EAAAA,GAGA,GAAAvK,MAAAqK,QAAAD,EAAAhJ,KAAA8I,EAAAO,gBAAA,EACAN,EAAA/I,GAAAgJ,EAAAhJ,OACA,IAAApB,MAAAqK,QAAAD,EAAAhJ,KAAA8I,EAAAQ,cAAA,EACAP,EAAA/I,GAAAgJ,EAAAhJ,GAAA0F,KAAA,SACA,CAGA,GAAAyD,GAAAvF,EAAA2D,KAAAgC,QAAAP,EAAAhJ,GAAA8I,EPgSwBhJ,QAAOuH,KAAK8B,GAAahG,QAAQ,SAAUiG,GO9RnEL,EAAA/I,EAAA,IAAAoJ,GAAAD,EAAAC,SPoSoBL,GAAO/I,GAAOgJ,EAAMhJ,KOxRxC+I,GAIAnF,EAAA2D,KAAAiC,QAAA,SAAAC,GAEA,GAAAC,GAAA,mEACAC,EAAA1G,EAAA0G,QAAA1G,EAAA2G,UAAA,kBAAAC,UAAAA,QAAA,UACAF,EAAAG,WAEA,GAAAH,GAAAA,EAAAI,YAhBA,MAAA,IAAAJ,EAAAI,YAAA,GAAA,EAmBAC,KAAAL,IAAAK,EAAArJ,gBACAsJ,MAAA,IAAAA,KAAAA,MAAA,IAAAlJ,KAAAmJ,SP+RY,IAAIC,GAAO,GAAIC,YAAW,EOxRtCH,OAFAI,GAAAA,gBAAAX,GAEAO,GAAAA,EAAAA,IAEAD,EAAAK,SAAA1J,GAIA,IAjCA,GAAAsJ,GAAA,EP2TgBK,EAAO,OACPD,EAAM,IO3RtBC,GACAD,GAAAX,EAAA/I,GAAA,EAAAsJ,EAAA,GAAAM,KP8RgBD,EAAO3J,EAASI,KAAKS,IAAI,GAAIyI,EAAc,GO5R3DO,GP+RY,OAAOH,IOtRnBG,EACAC,cP8RY1E,EAAU,EO3RtB2E,EAAAA,OACAC,EAAA,MPiSQ,OO/RRA,GAAAA,GAAA,EP+Re,WO5RfN,GAAAA,GAAAA,GACAK,EAAA3J,KAAAO,MAAA,OAAA,GAAAsJ,OAAAC,UAAAL,GAeA,OAbAC,KAAAE,EACAN,KAEAK,EAAA,EAjBAC,EAAAF,GAqBAJ,EAAAA,EAAAL,EAAAjE,GAAAiE,EAAAP,GP8RgBiB,EAAU,IO5R1BL,GAAAL,EAAAU,IAEAI,GAAAd,EAAAS,OAOA7G,EAAAkH,IPsSQC,kBAAmB,WACf,OACIlI,EAAGkB,EAAuBd,EAAOgB,YAAsDC,EAAkBJ,EAASkH,gBAAgBC,WAAanH,EAASoH,KAAKD,WO5R7KE,EAAAA,EAAAlI,EAAAmI,YAAAlH,EAAAJ,EAAAkH,gBAAAK,UAAAvH,EAAAoH,KAAAG,YAUAF,eAAA,SAAAC,EAAAE,GP8RY,GAAIC,IO5RhBC,OAAAJ,EAAAK,aA/BAC,MAAAN,EAAAO,aAkCAC,EAAAR,EAAAS,cAAA5I,EAAA6I,iBAAAV,EPoSY,OALIE,KACAC,EAAKC,QAAUO,SAASH,EAAMI,WAAaD,SAASH,EAAMK,cO5R1EC,EAAAR,OAAAK,SAAAH,EAAAO,YAAAJ,SAAAH,EAAAQ,cPgSmBb,GAOXW,YAAa,WOhRrB,GAAAhB,GAAApH,EAAA2C,cAAA,QPkRgB4F,EAAOvI,EAASkH,eAEpB,QOhRZsB,EAAAA,KAAAA,IAAApB,EAAAqB,YAAArB,EAAAS,YAAAU,EAAAG,YAAAH,EAAAE,YAAAF,EAAAV,aAEAD,EAAAA,KAAAN,IAAAA,EAAAoB,aAAAtB,EAAAO,aAAAY,EAAAI,aAAAJ,EAAAK,aAAAL,EAAAZ,gBAQAkB,gBAAAC,WAFA,GAAAxB,GAAAlH,EAAAJ,EAAAkH,gBAAAlH,EAAAoH,KAzEAQ,EAAAN,EAAAoB,YP+VgBhB,EAASJ,EAAQqB,aOhRjCI,EAAA5J,EAAA6J,YAAA,EPkRgBC,EAAW9J,EAAO+J,aAAyD,EAC3EJ,EAAeC,GAAWnB,EAAQmB,GAAWE,GAAYvB,EAASuB,CAEtE,QOhRZE,GAAAA,EAAAJ,EAAAnB,EACAwB,GAAAA,EAAAH,EAAAvB,IASA2B,iBAAA,SAAAC,GACAF,GAAAA,GAAAA,EAAAlJ,MACAqJ,EAAAA,EAAArJ,MAHAkH,EAAApH,EAAAoH,KA7FAoC,EAAAxJ,EAAAkH,gBPoXgBC,EAAa,aOhR7BI,EAAA,YPkRgBkC,EAAOH,EAAMI,UAAU/M,YAAYgN,IAEvC,QACIN,GAAII,EOhRpBG,GAAAA,SAAAA,EAAAN,EAAAO,QAAAzC,EAAAD,GAAAqC,EAAArC,GAAAiC,EPkRgBG,GAAWrJ,SAAPqJ,EAA6DD,EAAMQ,QAAU1C,EAAKG,GAAaiC,EAAGjC,GAAagC,IOxQnIK,mBAAA,SAAAtC,GAMA,GAAAnG,GAAA,+FACA,KACA,GAAA4I,GAAAzC,EAAA0C,wBACA5C,EAAApH,EAAAoH,KAAA4C,uBAOAC,OAHAC,GAAAC,KAAAC,SAAAD,IACAE,EAAAN,OAAA5I,EAAAiG,IASAiD,GAAAN,EAFAI,KAAA/C,EAAA+C,KAGAG,GAAAP,EAHAQ,IAAAnD,EAAAmD,IAIAN,GAAAF,EAJAS,MAAApD,EAAA+C,KAKAhJ,GAAAA,EAAAsJ,OAAArD,EAAAmD,KA7IA,MAAAG,GAkJA,MPgRgB5K,GAAOiB,OAAOI,GAAOwJ,UAAWD,EAAGpD,QAASA,KAExC4C,GAAI,EACJG,GAAI,EACJC,GAAI,EACJL,GAAI,EACJ9I,IAAK,KOnQzByJ,iBAAAA,SAAAA,EAAAA,EAAAA,GAFA,GAAAC,GAAA5N,KAAAa,IAAA4M,EAAAR,GAAAY,EAAA/L,GAnKAgM,EAAA9N,KAAAY,IAAA6M,EAAAJ,GAAAQ,EAAA/L,EAAAiM,EAAAC,IPwbgBC,EAAOjO,KAAKa,IAAI4M,EAAEL,GAAIS,EAAE9L,GO/QxCmM,EAAAlO,KAAAY,IAAA6M,EAAAT,GAAAa,EAAA9L,EAAAgM,EAAAnC,IPiRgBuC,EAAmBnO,KAAKa,IAAI,EAAGiN,EAASF,GAAS5N,KAAKa,IAAI,EAAGqN,EAAUD,GACvEN,GAAeF,EAAEJ,GAAKI,EAAER,KAAOQ,EAAET,GAAKS,EAAEL,GAE5C,QO/QZgB,iBAAAD,EACAV,YAAAE,IADAS,wBAAA,SASA/D,GATA,GASA8D,GAAAA,EAAAA,GAAAA,mBATA9D,GASAsD,EAAAA,EATA5D,GAAAC,oBP6RgB+D,EAAIlL,EAAOkH,GAAGwB,iBAGlB,IAAIkC,EAAEvJ,IAAK,MAAO,EOjR9B,IAAAmK,GAAAxL,EAAAkH,GAAAuE,iBAAAb,EAAAI,EAAAE,GACAI,EAAAA,EAAAA,iBACAR,EAAAU,EAAAV,WP2RY,OAAIA,IAAe,EAAU,EAGtBQ,EAAmBR,IO7QtC9K,EAAAkH,GACAwE,UAAAA,SADAlE,EAAAmE,GAuBA,IAlBAD,GAAAA,GAAAA,GAAAE,EAAAC,WACAC,EAAA9L,EAAAkH,GAAAK,eAAA5E,GAAAiF,OACAmE,EAAA3L,SAAAoH,EAAAwE,YPwRYC,EAAOF,EAAiBvE,EAAQwE,YAAwDxE,EAAQ0E,UOrR5GR,EAAA,GACAS,EAAA,IAEAC,EAAApM,SAAAuH,GP0RY,MAFAmE,GAAeW,EAAMT,OAAO,EAAGS,EAAMxQ,OAAS,GAAK6P,EAE5C,OOhRnB1L,EAAAkH,GAAAK,eAAAC,GAAAI,OAAAkE,GAAAG,EAAApQ,OAAA,GAAAsQ,KAAA,GPuRYF,EAAOF,EAAiBvE,EAAQwE,YAAcxE,EAAQ0E,UOpRlED,EAAAA,EAAAvI,QAAA/C,EAAAyL,GAEAV,EPuRgBlE,EAAQwE,YAAcC,EOpRtCK,EAAApM,UAAAqM,CAOAD,IAAAA,EAAAN,OAAA,EAAAN,CAEAc,GAAAA,GAAAN,EAAAK,cAAA,QACAD,EAAAJ,EAAAK,cAAA,OPwRYC,GAAQC,aAAa,QAAS,mBOrR1CjF,EAAAA,aAAA,QAAA,0BAEAA,GACAgF,EAAAR,YAAAC,EAAAL,OAAA,EAAAK,EAAApQ,OAAA,GAxDAyQ,EAAAN,YAAAN,IA4DAc,EAAAN,UAAAD,EAAAL,OAAA,EAAAK,EAAApQ,OAAA,GPsRgByQ,EAAKJ,UAAYR,GOjRjCxL,EAhnBAwM,UAAA,GCTAlF,EAAAmF,YAAAH,GR+4BYhF,EAAQmF,YAAYL,KAOrBjN,EAAOW,OAASA,GACzBX,OAAQa,SAw6BV,OAr6BA,UAAWb,GQ54BXW,GAAAA,GAAAwD,qBR+4BQxD,EAASX,EAAOW,MASpBA,GAAO+C,IAAIS,QAAU,SAAUoJ,EAAQC,EAAKC,EAAStN,GAG1B,kBAAZsN,KQ74BnBtN,EAAAsN,EACApG,EAAAtG,OAIAZ,IAAAA,GAAAA,IAAAA,EAAAuN,gBAAA1N,EAAA2N,eAAA,sBRi5BYC,GAAa,EQ34BzBC,EAAAC,SAAApK,EAAAS,GRg5BiByJ,IQ74BjBA,GAAA,EACAG,EAAA/L,EAAA0L,IAKAxK,GAAAA,IAAAA,QAAA4K,UACAE,EAAAA,QAAAA,EAAAtK,IAAAS,QAAA2J,SAJAD,EAAAE,UAAA,SAAAxC,GRw5BYlE,GQ74BZ4G,WAAA,IACAC,MAAAA,oBACAhL,QAAA,uBACA2K,YACA1D,MAAAoB,EACAsC,IAAAM,MAMAN,EAAAK,mBAAA,SAAA3C,GAEAmC,GAAA,IAAAA,EAAAA,WAEAU,GAAAA,EAAAA,OAAAA,EAAAP,CAFA,GAAAH,GAAA,MAOAG,GADAQ,EAAA7J,KAAAqJ,EAAAS,kBAAA,iBACAH,KAAAI,MAAAV,EAAAA,eAIAI,WAAAJ,EAAAM,OACAC,KAAAP,EAAAW,cAKAtL,EAAAA,QAAA,KAAA2K,EAAAM,OAHA,IAIAH,EAAAA,KAAAA,GAEAS,EAAAA,OAIApH,IApCA4G,WAAA,IRo7BwBpL,MAAO,iBQ74B/BK,QAAA,uBACAwL,YR+4B4BvE,MAAOoB,EQ74BnCkD,IAAAZ,MAQAA,EAAAc,KAAApB,EAAAmB,cAAAlB,GAGAK,EAAAe,iBAAA,GRi5Ba,OAAQ,MAAO,SAASpP,SAAS+N,EAAOmB,iBQ74BrDb,EAAAgB,iBAAA,eAAA,mCACA9N,SAAAoD,IACAA,EAAA2K,KAAAnO,UAAAwD,KRm5BQ0J,EAAIkB,KAAKtB,GAAW1M,SQ14B5BJ,EAAAoG,IAAAA,QAAAiI,IAAAjI,EAAArD,IAAAS,QAAA8K,KAAArT,KAAA,OACA+E,EAAA+C,IAAAe,QAAAqK,KAAArK,EAAA1D,IAAAA,QAAAkO,KAAArT,KAAA,QACA+E,EAAA+C,IAAAwL,QAAAA,IAAAA,EAAAxL,IAAAe,QAAAwK,KAAArT,KAAA,OACA+E,EAHA+C,IAAAS,QAGAxD,UAHAA,EAAA+C,IAAAS,QAAA8K,KAAArT,KAAA,SRw5BI,IAAImL,GAAS,SAAgBtC,GQ74BjC0K,MAAA,QAAAA,GAAApO,SAAAoO,EAAA,GACAC,mBAAA,GAAA3K,IRu5BQ0K,EAAS,SAAgBpS,EAAKqS,GAC9B,MAAIA,GACOA,EAAY,IAAMrI,EAAOhK,GAAO,IQ54BnDoH,EAAAkL,GAQA1O,GAAA+C,IAAAS,QAAAkL,UAAA,SAAA9R,EAAA6R,GACA,GAAAE,KRg6BQ,OQ/5BRF,GAAA1B,GAAAnL,GACA1F,OAJAuH,KAIA7G,GAAAxB,QAAAgF,SAAAhE,GACAuS,GAAAA,GAAA/M,EAAA4M,EACA,IAAAxT,MAAAqK,QAAAjK,GAVAA,EAAAmE,QAAA,SAAA2L,GAYAyD,MAAAA,GAAA/M,KAAA4M,EAAApS,EAAAqS,GAAA,IAAArI,EAAA8E,UAnKA,IAAA,YAAA,mBAAA9P,GAAA,YAAAqB,EAAArB,KAAA,OAAAA,EAAA,CRujCgB,GAAI2R,GAAM/M,EAAO+C,IAAIS,QAAQkL,UAAUtT,EAAOoT,EAAOpS,EAAKqS,GSvjC1E1B,IAAA4B,EAAA/M,KAAAmL,OACA3M,UAAAF,GTyjCgByO,EAAM/M,KAAK4M,EAAOpS,EAAKqS,GAAa,IAAMrI,EAAOhL,MAGlDuT,EAAM7M,KAAK,OAEvBzC,QAIH,SAAWA,EAAQa,GSnjCnB0O,EAAAA,OAAAA,KAAAC,QTgkCQC,IAAK,SAAaC,EAAY3T,EAAO4T,GACjC,GAAIJ,GAAa,GAAI5H,KACrB4H,GAAWC,QAAQD,EAAWK,UAAYD,EAC1C,IAAIE,GAAUF,EAAa,YAAcJ,EAAWO,cAAgB,IAAM,GSvjCtFC,EAAA,UACAjK,EAAAkK,UAAAjU,GAAA,IAAA8T,EAAAE,CACAlP,GAAAoP,OACA5N,EADA,IAEA6N,GAQAlB,IAAA,SAAAU,GACA,GAXA5J,GAAA,IT4kCY,OS/jCZjF,GAAAiF,OAAAzD,MAAA,KAAAlD,KAAA,SAAA8Q,GACA,GAAAE,GAAAF,EAAA1D,OAAA,EAAA0D,EAAA/K,QAAA,MAAAR,OAtCA3I,EAAAkU,EAAA1D,OAAA0D,EAAA/K,QAAA,KAAA,EAyCArE,OA9CAsP,KAAAT,ICHA5J,EAAAsK,UAAArU,IVumC2B,KAKR+J,KAGhB9F,OAAQa,UAIX,SAAWb,EAAQa,GUrmCnB,GAAAF,GAAAX,EAAAW,OV8mCQ0P,EAAU,WAGV,QAASA,KUvmCjBxU,EAAAD,KAAAyU,GAOAzU,KAAA0U,OAAA1U,KAAA2U,kBACA3U,KAAA4U,gBAAA,KAKA5U,KAAA6U,OAAA9P,EAAA2D,KAAAiC,UACA3K,KAAA8U,eAAAL,EAAAM,QAAAC,SAEAhV,KAAAiV,IAAA,KACAjV,KAAA0U,SAAA,KVymCY1U,KAAK4U,SAAW,KAGhB5U,KAAKkV,uBUvvBjBC,MAxWA5U,GAAAkU,IACAtT,IAAA,kBACAhB,MAAA,WACA4E,IAAAA,EAAAA,aAAA0P,EAAAW,OAAAD,OAtDA,QAuDA,KACA,GAAAA,GAAAE,KAAA1C,MAAAvO,EAAAkR,aAAAb,EAAAW,OAAAD,OACA,OAAApV,OAAAqK,QAAA+K,GACAA,GAEApQ,EAAAiB,OAAA,+BAAAmP,MAAAA,QAGA,MAAAxF,GV8mCwB,MADA5K,GAAOiB,OAAO,4CAA8CI,IAAKuJ,WUjmCzFxO,IANA,aAOAiD,MAAAA,SAAAmR,GACA,GAAAC,GAAAxV,IVmnCoBuV,IUhnCpBvV,KAAAyV,mBAAAC,aAAA1V,KAAAyV,mBVknCoBzV,KAAKyV,kBAAoBE,WAAW,WAChCH,EAAMI,YAAW,GACjBJ,EAAMC,kBAAoB,MAC3B,MUrsCvBrR,EAAAkR,aAAAb,EAAAW,OAAAD,OAAAE,KAAA5B,UAAAzT,KAAA6V,WA4FA1U,IAAA,uBACAhB,MAAA,WACA2V,GAAAA,GAAAA,EAAArB,KAAAA,kBAAAsB,GACAC,EAAAA,EAAAvB,EAAAwB,OAAAC,MACAC,EAAAC,EAAAd,aAHAb,EAAAW,OAAAxG,OAAA7J,EAAA2D,KAAA2L,OAAAjB,IAAAqB,EAAAW,OAAAxG,MAKAyH,EAAAA,EAAA5B,EAAAW,OAAAkB,SALAC,EAAAC,EAAA/B,EAAAW,OAAAqB,QASAL,IAAAM,GAAAN,IAAAM,GACA1W,KAAA2W,YACAjC,YAAA6B,EAAAA,OAAAR,eACAnB,WAAAgC,EAAAA,MAAAV,YACAC,GAAAC,EAAA,IAAAM,EVsnCwBG,GAAI7W,KAAK8U,eUpnCjCuB,YAAA,IV0nCgBrW,KAAKiV,IAAMyB,GAAYN,GAAU,KUtuCjDpW,KAAA0U,SAAA6B,GAAA,KAAAvW,KAAA4U,SAAAgC,GAAA,QA0HAzV,IAAA,aVynCYhB,MAAO,SAAoBoO,EAAOhK,GUtnC9C,MAAAgK,GAAAuH,aAAAvH,EAAAyH,eA7HAhW,MAAA8W,MAAAvI,EAAAhK,OVsvCoBQ,GAAOiB,OAAO,+DAAiEuI,MAAOA,OU3mC1GpN,IAAA,gBV4nCYhB,MAAO,SAAuBoO,EAAOhK,GU1nCjDgK,EAAAA,MV4nCgBA,EAAMuH,YAAcrB,EAAQxT,OAAO8V,KACnCxI,EAAMyH,WAAavB,EAAQwB,MAAMe,KACjCzI,EAAM4H,GAAK5H,EAAM4H,IAAM/R,EAAOsF,SAASuN,KACvC1I,EAAMsI,GAAKtI,EAAMsI,IAAM7W,KAAK8U,eU5wC5C9U,KAAA2W,WAAApI,EAAAhK,MA4JApD,IAFA,QAGAhB,MAAA,SAAA+W,EAAA3S,GACAvE,KAAA6V,OAAAlP,MAAA4H,MAAAA,EAAAhK,SAAAA,IAGAvE,KAAA4V,YAAA,GVioCoBrH,EAAM8H,iBACC9H,GAAM8H,WUnyCjCrW,KAAAkX,mBA4KA/V,IAAA,gBVooCYhB,MAAO,WUloCnB,GAAAgX,GAAAnX,MVsoCqBA,KAAKoX,iBAAmBpX,KAAK6V,OAAOjV,OAAS,IUloClEZ,KAAAoX,gBAAAzB,WAAA,WVsoCwB,GAAI/S,GAAQuU,EAAOtB,OAAO7O,OAAO,EAAG,IUloC5DmQ,GAAAvB,YAAA,GVsoCwBuB,EAAOE,WAAWzU,EAAO,SAAUwD,EAAK0L,GU7oChEA,GAAAA,EAAAU,MAAAV,EAAAU,KAAAyC,KAAAkC,EAAAG,WAAAxF,EAAAU,KAAAyC,KAmBAkC,EAAAC,gBAAA,KVmoC4BD,EAAOD,gBAGPtU,EAAM0B,QAAQ,SAAUiT,GACpBA,EAAKhT,UAAYgT,EAAKhT,SAAS6B,EAAK0L,QAG7C,OU1nCvB3Q,IAAA,aVuoCYhB,MAAO,SAAoByC,EAAO2B,GUroC9C,GAAAiT,GAAAD,KAGA1F,EAAAA,EAAA9H,IAAA,SAAAwN,GAOA,MANAE,GAAAA,gBADAF,EAAAhJ,aV0oC2BgJ,GAAKhJ,MAAM0G,UUroCtC7M,GAAArD,MAAA2S,IAEAH,EAAAhJ,QAGAsD,GVuoCoB4F,OAAQA,EUroC5BC,IAAAtT,EAAAsF,SAAAuN,MAMA7O,EAAArD,EAAA+C,IAAAK,SAAApD,EAAA+C,IAAAG,OAAA0P,cAGApT,MAAAA,MARAsN,EAAAoD,IAAAjV,KAAAiV,KVgpCgBlQ,EAAO+C,IAAIS,QAAQ2K,KAAK9K,EAAOyJ,EAAS,SAAUzL,EAAK0L,GAE/C1L,GACArB,EAAOiB,OAAO,gCAAkCI,IAAKA,EAAK0L,IAAKA,EAAKlP,MAAOA,EAAOwF,MAAOA,IUv3CjH7D,GAAAA,EAAA6B,EAAA0L,QA+PA3Q,IAAA,kBVsoCYhB,MAAO,SAAyBoO,GUloC5CA,EAAAqJ,EAAA3W,EAAAA,MAGAA,EAAAA,IAAAwT,EAAAA,KAAAoD,EAAAA,EAAA1W,KAAAmD,EAAAnD,KAAAA,OVwoCoBnB,KAAKiV,MAAK1G,EAAM0G,IAAMjV,KAAKiV,KUroC/C1G,EAAAqJ,EAAA3W,OAAAuD,UAAA+J,EAAAqJ,GACA3W,OAAAuH,KAAAiM,EAAAqD,KAAAD,SAAAvT,QAAA,SAAAnD,GV4oCoB,aAAcoN,GAAMqJ,EAAEzW,KUvoC1CnB,KAAA0U,WACAnG,EAAAwJ,EAAAA,OAAAhT,KAAAmC,UAEAlH,KAAA4U,WACArG,EAAAxJ,EAAAA,OAAA/E,KAAA0K,UAIA6D,EAAAqJ,EAAAI,KAAAzJ,KAAAA,OAGAA,EAJAqJ,EAAAG,OAAAhT,EAAAmC,QAOAqH,EAAAtJ,EAAAA,EAAAgT,KAAAvN,QAAA6D,EAAAqJ,GAAAnN,YAAA,IV8oCgBxJ,OAAOuH,KAAK+F,EAAMqJ,GAAGtT,QAAQ,SAAUnD,GU1oCvD,gBAAAoN,GAAAqJ,EAAAzW,KACAuW,EAAAtT,EAAAA,GAAAsF,EAAAuN,EAAAA,GAAAtG,OAAA,EAAA,QVgpCoB1L,EAASgT,WACT1J,EAAM2J,IAAMjT,EAASgT,UUn7CzC1J,EAAAmJ,IAAAtT,EAAAsF,SAAAuN,QAmTA9V,IAAA,aV+oCYhB,MAAO,SAAoB8U,IAClBjV,KAAKiV,KAAOA,IACbjV,KAAKiV,IAAMA,EACX7Q,EAAOkR,aAAab,EAAQW,OAAOxG,MAAQqG,EAC3ClQ,EAAO2D,KAAK2L,OAAOR,IAAIY,EAAQW,OAAOxG,KAAMqG,EAAKR,EAAQW,OAAO+C,SUtjCpFhX,IAAA,SAtFAhB,MAAA,WAAA,IACAuM,GAAAA,GAAA3H,UAAA8J,OAAAA,EAAAtC,MADA6L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IVoqCoBnS,EAAKmS,GAASlV,UAAUkV,EU/pC5C9J,OAAAkG,GAAAsC,OAAA3P,MAAA,KAAAlB,QAGAqI,IAAAA,iBACAA,MAAAA,SAAAhC,EAAAgC,GACAA,GAAAA,GAAAxJ,EAAAmK,GAAA7B,cVmqCoBX,EAAO3H,EAAOkH,GAAG4C,mBAAmBtC,EUv+CxD,OAuUAgC,GAAAA,MVmqCgBA,EAAMqJ,EAAIrJ,EAAMqJ,MUjqChCrJ,EAAAqJ,EAAAU,GAAAvB,EAAAwB,EACAhK,EAAAqJ,EAAAY,GAAAzB,EAAA0B,EVmqCgBlK,EAAMqJ,EAAEzI,GAAKzC,EAAKyC,GAClBZ,EAAMqJ,EAAEtI,GAAK5C,EAAK4C,GAClBf,EAAMqJ,EAAErI,GAAK7C,EAAK6C,GAClBhB,EAAMqJ,EAAE1I,GAAKxC,EAAKwC,GUh/ClCX,KAwVAA,IAAAA,kBVsqCYpO,MAAO,SAAyBoO,GUpqC5C,GAAAmK,GAAAnK,EAAAtC,GAAAwB,kBACAkL,EAAA5T,EAAAkH,GAAAC,mBV8qCgB,OU5qChBqC,GAAAA,MACAA,EAAAqJ,EAAArJ,EAAAqJ,MVsqCgBrJ,EAAMqJ,EAAEgB,IAAMD,EAAI3U,EAClBuK,EAAMqJ,EAAEiB,IAAMF,EAAI1U,EAClBsK,EAAMqJ,EAAEkB,IAAMH,EAAI3U,EAAI0U,EAAGxI,GACzB3B,EAAMqJ,EAAEmB,IAAMJ,EAAI1U,EAAIyU,EAAG5K,GAElBS,KU5pCvBpN,IAAA,eACAhB,MAAA,SAAA6Y,EAAAzK,GVyqCgB,GAAIoK,GAAM5T,EAAOkH,GAAGmC,iBAAiB4K,EAQrC,OU9qChBzK,GAAAA,MVyqCgBA,EAAMqJ,EAAIrJ,EAAMqJ,MAChBrJ,EAAMqJ,EAAEtJ,GAAKqK,EAAIrK,GACjBC,EAAMqJ,EAAEvJ,GAAKsK,EAAItK,GACjBE,EAAMqJ,EAAEpJ,GAAKmK,EAAInK,GAEVD,KAYXpN,IAAK,eU/qCjBhB,MAAA,SAAAoO,GACAA,EAAAA,MVirCgBA,EAAMqJ,EAAIrJ,EAAMqJ,KAEhB,KAAK,GAAIqB,GAAQ9V,UAAUvC,OAAQsF,EAAOnG,MAAMkZ,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAClGhT,EAAKgT,EAAQ,GAAK/V,UAAU+V,EUjjDhD,OVojDgB3K,GAAMqJ,EAAI3W,OAAOuD,OAAO4C,MAAMnG,QAASsN,EAAMqJ,GAAGvQ,OAAOnB,IUpjDvEqI,KVikDYpN,IAAK,SUjkDjBhB,MAAA,SAAAqS,GAAA,IAAA,GAAA2G,GAAAhW,UAAAvC,OAAAsF,EAAAnG,MAAAoZ,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IVokDoBlT,EAAKkT,EAAQ,GAAKjW,UAAUiW,EAIhC,OAAO,IAAIC,GAAY7G,EAAMtM,OU7qC7CuO,IV0rCIA,GAAQW,QACJD,MAAO,QUhrCfV,KAAAqD,UACAD,QAAA,QADAvB,QAAA,QVorCQ6B,IAAK,MU1qCbmB,EAAAA,MACAC,SAAAA,MAAA,WAHA,0BAAA,kBAAA,SV2rCI9E,EAAQwB,OUhrCZxB,KAAA+E,KACAC,WAAA,MACAC,YAAAA,MAFAxD,YAAA,OAUAyD,EAAAA,QACAC,MAAAA,QACAC,aAHA,gBAUAC,EAAAA,QACAC,QAAAA,KACAC,cAZA,KAaAjE,KAAAA,KAbAgB,KAAA,KVgsCQkD,OAAQ,KUhrChBC,QAAA,KVkrCQC,MAAO,KACPC,MAAO,KACPC,YAAa,KUhrCrB5F,MAAAM,KACAuF,WAAA,KACAD,KAAAA,KACArF,eAHA,MV2rCIP,EAAQM,SUhrCZuF,UAAA,KVkrCQD,YAAa,KACbrF,SAAU,KU9qClBuF,eADA,KAEAC,UAAA,KAFAC,aAAA,MASAhG,EAAAiG,aAAAH,KAAA,OVorCQC,QAAS,UU/qCjB,IAAAnB,GAAAjP,WACAuQ,QAAAA,GAAArW,EAAAqW,GACA,GAAAC,GAAA5a,IAEAC,GAAAD,KAAAqZ,GAGA7G,EAAAA,MVurCYxS,KAAKwS,KAAKA,GAENzS,MAAMqK,QAAQuQ,IACdA,EAAOrW,QAAQ,SAAUkO,GACrBoI,EAAOpI,KAAKA,KA+HxB,MApHAjS,GAAa8Y,IACTlY,IAAK,OACLhB,MAAO,SAAc0a,GUlsDjC,MAAA5Z,QAAAuD,OAAAxE,KAAA+E,EAAA2D,KAAAsB,UAAA6Q,IAAA7a,QV8sDYmB,IAAK,QU9sDjBhB,MAAA,SAAA6Y,GAAA,MAAAvE,GAAAqG,aAAA9B,EAAAhZ,MAAAA,QV0tDYmB,IAAK,WACLhB,MAAO,WU3tDnB,MAAAsU,GAAAsG,gBAAA/a,MAAAA,QVuuDYmB,IAAK,UACLhB,MAAO,SAAiB6a,GUxuDpC,MVyuDgBvG,GAAQwG,eAAeD,EAAUhb,MUzuDjDA,QA2iBAmB,IAAA,OV2sCYhB,MAAO,WACH,IAAK,GAAI+a,GAAQ/X,UAAUvC,OAAQsF,EAAOnG,MAAMmb,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAC9EjV,EAAKiV,GAAShY,UAAUgY,EUxvD5C,OV2vDgB1G,GAAQ2G,aAAahU,MAAM,MAAOpH,MAAMqH,OAAOnB,IU3vD/DlG,QVuwDYmB,IAAK,OACLhB,MAAO,SAAc2V,EAAaE,GUxwD9C,MAAAhW,MAAA8V,YAAAA,EAAA9V,KAAAgW,WAAAA,EAAAhW,QVoxDYmB,IAAK,OUpxDjBhB,MAAA,SAAAoE,GAAAQ,EAAAgB,QAAA4Q,WAAA3W,KAAAuE,MA8kBApD,IAAA,QVmtCYhB,MAAO,WUhtCnB4E,GAAAA,GAAAgB,OAAAsV,UAAArb,MAGA8V,EAAA3N,EAAAA,YAEA6N,EAAAzH,EAAAyH,UAIAjQ,cV+sCuBwI,GAAMuH,kBUzyD7BvH,GAAAyH,WAylBAjR,EAAAgB,QAAAsV,gBAAA9M,GACAxJ,EAAA0P,IAAAtM,SAAApD,EAAA+C,IAAAG,OAAAlC,SAAA+P,YAAAA,EAAAE,WAAAA,IAAA,IAAAjR,EAAA+C,IAAAS,QAAAkL,UAAAlF,OV0tCe8K,IAMXtU,GAAOgB,QAAU,GAAI0O,IACtBrQ,OAAQa,UACJF","file":"okanjo-metrics.min.js","sourcesContent":["/*! okanjo-metrics.js v1.7.1 | (c) 2013 Okanjo Partners Inc | https://okanjo.com/ */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.okanjo = factory();\n  }\n}(this, function() {\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n    Array.from = function () {\n        var toStr = Object.prototype.toString;\n        var isCallable = function isCallable(fn) {\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function toInteger(value) {\n            var number = Number(value);\n            if (isNaN(number)) {\n                return 0;\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number;\n            }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function toLength(value) {\n            var len = toInteger(value);\n            return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n\n        // The length property of the from method is 1.\n        return function from(arrayLike /*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            var C = this;\n\n            // 2. Let items be ToObject(arrayLike).\n            var items = Object(arrayLike);\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n            var T;\n            if (typeof mapFn !== 'undefined') {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2];\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            var len = toLength(items.length);\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n            // 16. Let k be 0.\n            var k = 0;\n            // 17. Repeat, while k < len… (also steps a - h)\n            var kValue;\n            while (k < len) {\n                kValue = items[k];\n                if (mapFn) {\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n                } else {\n                    A[k] = kValue;\n                }\n                k += 1;\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len;\n            // 20. Return A.\n            return A;\n        };\n    }();\n}\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nif (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n        value: function value(searchElement, fromIndex) {\n\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            // 1. Let O be ? ToObject(this value).\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If len is 0, return false.\n            if (len === 0) {\n                return false;\n            }\n\n            // 4. Let n be ? ToInteger(fromIndex).\n            //    (If fromIndex is undefined, this step produces the value 0.)\n            var n = fromIndex | 0;\n\n            // 5. If n ≥ 0, then\n            //  a. Let k be n.\n            // 6. Else n < 0,\n            //  a. Let k be len + n.\n            //  b. If k < 0, let k be 0.\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            function sameValueZero(x, y) {\n                return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n            }\n\n            // 7. Repeat, while k < len\n            while (k < len) {\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\n                if (sameValueZero(o[k], searchElement)) {\n                    return true;\n                }\n                // c. Increase k by 1.\n                k++;\n            }\n\n            // 8. Return false\n            return false;\n        }\n    });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n        value: function assign(target, varArgs) {\n            // .length of function is 2\n            'use strict';\n\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}\n\"use strict\";\n\n/* exported okanjo */\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n/**\n * Okanjo widget framework namespace\n * @global okanjo\n */\nvar okanjo = function (window, document) {\n\n    //region Constants\n\n    // Environment Vars\n    var SUPPORTS_PAGE_OFFSET = window.pageXOffset !== undefined;\n    var CSS1_COMPATIBLE = (document.compatMode /* istanbul ignore next: out of scope */ || \"\") === \"CSS1Compat\";\n    var AGENT = window.navigator.userAgent;\n    var ELLIPSIFY_PATTERN = /[\\s\\S](?:\\.\\.\\.)?$/;\n    var MOBILE_PATTERN = /(iPhone|iPad|iPod|Android|blackberry)/i;\n    var NOOP = function NOOP() {};\n    var Console = window.console;\n\n    // Place to pull defaults, if already set\n    var settings = window.okanjo || {};\n\n    //endregion\n\n    //region Okanjo Core\n\n\n    //noinspection JSValidateJSDoc,JSClosureCompilerSyntax - idk phpStorm generated it so why would it be wrong? :P\n    /**\n     * Okanjo namespace\n     * @global\n     * @type {{version: string, metrics: null, key: null, report: ((...p1?:*[])), warn: ((p1?:*, ...p2?:*[])), qwery: ((p1?:*, p2?:*))}}\n     */\n    var okanjo = {\n\n        /**\n         * Okanjo version\n         */\n        version: \"1.7.1\",\n\n        /**\n         * Placeholder\n         */\n        metrics: null,\n\n        /**\n         * Global/default placement key\n         */\n        key: settings.key || null,\n\n        /**\n         * Reports an error to the console and possibly Raven in the future\n         * @param args\n         */\n        report: function report() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var err = args.find(function (arg) {\n                return arg instanceof Error;\n            });\n            if (!err) {\n                var messageIndex = args.findIndex(function (arg) {\n                    return typeof arg === \"string\";\n                });\n                err = new Error(args[messageIndex] || \"Okanjo Error\");\n                if (messageIndex >= 0) args.splice(messageIndex, 1);\n            } else {\n                // Grow our own stack so we can figure out what async thing did it\n                var stack = new Error().stack.split('\\n');\n                stack.shift();\n                stack.shift();\n                args.push({ reportStack: stack.join('\\n') });\n                args = args.filter(function (a) {\n                    return a !== err;\n                });\n            }\n\n            Console.error('[Okanjo v' + okanjo.version + ']: ' + err.stack);\n            args.length && Console.error.apply(Console, ['Additional information:'].concat(args));\n\n            // TODO - integrate with Raven\n        },\n\n        /**\n         * Warn developers of their misdeeds\n         * @param message\n         * @param args\n         */\n        warn: function warn(message) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n            }\n\n            var err = new Error(message);\n\n            Console.warn('[Okanjo v' + okanjo.version + ']: ' + err.stack);\n            args.length && Console.warn.apply(Console, ['Additional information:'].concat(args));\n        },\n\n        // Backwards compatibility when we shipped with qwery, cuz querySelector[All] wasn't mainstream enough\n        qwery: function qwery(selector, parent) {\n\n            // If parent is a selector, select the parent first!\n            if (typeof parent === \"string\") {\n                parent = document.querySelector(parent);\n\n                // If parent is not found, there are obviously no results\n                if (!parent) return [];\n            }\n\n            if (!parent) parent = document;\n\n            return parent.querySelectorAll(selector);\n        }\n    };\n\n    //endregion\n\n    //region Vendor Libs\n\n    /**\n     * Placeholder for where vendor libraries get no-conflict loaded\n     * @type {{}}\n     */\n    okanjo.lib = {};\n\n    //endregion\n\n    //region Networking\n\n    /**\n     * Networking methods\n     * @type {{getRoute: *, exec: *}}\n     */\n    okanjo.net = {\n\n        /**\n         * API Endpoints\n         */\n        endpoint: 'https://api2.okanjo.com',\n        sandboxEndpoint: 'https://sandbox-api2.okanjo.com',\n\n        /**\n         * API routes\n         */\n        routes: {\n            ads: '/content',\n            metrics: '/metrics/:object_type/:event_type',\n            metrics_batch: '/metrics'\n        },\n\n        /**\n         * Compiles a route and parameters into a final URL\n         * @param {string} route - Route constant\n         * @param {*} [params] - Key value hash\n         * @param {*} [env] - Optional environment to use instead of live\n         * @return {string} - Route\n         */\n        getRoute: function getRoute(route, params, env) {\n            if (params) {\n                Object.keys(params).forEach(function (key) {\n                    route = route.replace(':' + key, params[key] + \"\");\n                });\n            }\n            env = env || okanjo.env || 'live';\n            return (env === 'sandbox' ? okanjo.net.sandboxEndpoint : okanjo.net.endpoint) + route;\n        },\n\n        // placeholder, xhr request extension\n        request: NOOP\n    };\n\n    //endregion\n\n    // region Utilities\n\n    //noinspection JSClosureCompilerSyntax,JSValidateJSDoc\n    /**\n     * Utility functions and helpers\n     * @type {{isEmpty: ((p1?:*)=>boolean), isMobile: (()), getPageArguments: ((p1:boolean))}}\n     */\n    okanjo.util = {\n\n        /**\n         * Checks whether a value is _really_ empty (trims)\n         * @param val\n         * @return {boolean}\n         */\n        isEmpty: function isEmpty(val) {\n            return val === null || val === undefined || typeof val === \"string\" && val.trim().length === 0;\n        },\n\n        /**\n         * Checks if the current user agent identifies as a mobile device\n         * @returns {boolean}\n         */\n        isMobile: function isMobile() {\n            // KludgyAF™, but let's go with it\n            return MOBILE_PATTERN.test(AGENT);\n        },\n\n        /**\n         * Returns an object hashmap of query and hash parameters\n         * @param {boolean} includeHashArguments - Whether to include the hash arguments, if any\n         * @return {*}\n         */\n        getPageArguments: function getPageArguments(includeHashArguments) {\n\n            var split = function split(query) {\n                query = query || \"\";\n                var params = {};\n                var parts = query.split('&');\n                parts.forEach(function (part) {\n                    var eqIndex = part.indexOf('=');\n                    var key = void 0,\n                        value = void 0;\n                    if (eqIndex < 0) {\n                        key = decodeURIComponent(part);\n                        value = null;\n                    } else {\n                        key = decodeURIComponent(part.substring(0, eqIndex));\n                        value = decodeURIComponent(part.substring(eqIndex + 1));\n                    }\n                    if (key) params[key] = value;\n                });\n                return params;\n            };\n\n            var queryArgs = split(window.location.search.substring(window.location.search.indexOf('?') + 1));\n            var hashArgs = includeHashArguments ? split(window.location.hash.substring(Math.max(window.location.hash.indexOf('#') + 1, window.location.hash.indexOf('#!') + 2))) : {};\n            Object.keys(hashArgs).forEach(function (key) {\n                return queryArgs[key] = hashArgs[key];\n            });\n\n            return queryArgs;\n        }\n\n    };\n\n    /**\n     * Deep clones an object by breaking references, unlike Object.assign\n     * @param mixed – Source to clone (object, array, value)\n     * @param [out] - Existing output, if any\n     * @return {*}\n     */\n    okanjo.util.deepClone = function (mixed, out) {\n        if (Array.isArray(mixed)) {\n            // Array reference\n            out = out || [];\n            out = out.concat(mixed.map(function (val) {\n                return okanjo.util.deepClone(val);\n            }));\n        } else if ((typeof mixed === 'undefined' ? 'undefined' : _typeof(mixed)) === \"object\" && mixed !== null) {\n            // Object reference\n            out = out || {};\n            Object.keys(mixed).forEach(function (key) {\n                out[key] = okanjo.util.deepClone(mixed[key]);\n            });\n        } else {\n            // Value\n            out = mixed;\n        }\n\n        return out;\n    };\n\n    /**\n     * Flattens a multi-dimensional object into a single object\n     * @param input\n     * @param [options]\n     * @return {{}}\n     */\n    okanjo.util.flatten = function (input) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        var output = {};\n\n        if (input !== undefined && input !== null) {\n            Object.keys(input).forEach(function (key) {\n                // Convert object ids to hex strings\n                if (input[key] instanceof Date) {\n                    if (options.dateToIso) {\n                        output[key] = input[key].toISOString(); // convert to iso\n                    } else {\n                        output[key] = input[key]; // as-is\n                    }\n                } else if (_typeof(input[key]) === 'object' && input[key] !== null) {\n                    // Allow ignoring arrays if desired\n                    if (Array.isArray(input[key]) && options.ignoreArrays === true) {\n                        output[key] = input[key];\n                    } else if (Array.isArray(input[key]) && options.arrayToCsv === true) {\n                        output[key] = input[key].join(',');\n                    } else {\n                        // Make child objects flat too (always returns object so Object.keys is safe)\n                        var childObject = okanjo.util.flatten(input[key], options);\n                        Object.keys(childObject).forEach(function (childKey) {\n                            output[key + '_' + childKey] = childObject[childKey];\n                        });\n                    }\n                } else {\n                    // Copy value references\n                    output[key] = input[key];\n                }\n            });\n        }\n\n        return output;\n    };\n\n    /*! based on shortid https://github.com/dylang/shortid */\n    okanjo.util.shortid = function (clusterWorkerId) {\n\n        var shuffled = 'ylZM7VHLvOFcohp01x-fXNr8P_tqin6RkgWGm4SIDdK5s2TAJebzQEBUwuY9j3aC',\n            crypto = window.crypto || window.msCrypto || typeof require === \"function\" && require('crypto'),\n            randomByte = function randomByte() {\n            /* istanbul ignore next: platform diffs out of scope */\n            if (crypto && crypto.randomBytes) {\n                return crypto.randomBytes(1)[0] & 0x30;\n            } else if (!crypto || !crypto.getRandomValues) {\n                return Math.floor(Math.random() * 256) & 0x30;\n            }\n            /* istanbul ignore next: platform diffs out of scope */\n            var dest = new Uint8Array(1);\n            /* istanbul ignore next: platform diffs out of scope */\n            crypto.getRandomValues(dest);\n            /* istanbul ignore next: platform diffs out of scope */\n            return dest[0] & 0x30;\n        },\n            encode = function encode(number) {\n            var loopCounter = 0,\n                done = void 0,\n                str = '';\n\n            while (!done) {\n                str = str + shuffled[number >> 4 * loopCounter & 0x0f | randomByte()];\n                done = number < Math.pow(16, loopCounter + 1);\n                loopCounter++;\n            }\n            return str;\n        },\n\n\n        // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n        // This number should be updated every year or so to keep the generated id short.\n        // To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n        REDUCE_TIME = 1490384907498,\n            version = 7;\n\n        var counter = void 0,\n            previousSeconds = void 0;\n\n        clusterWorkerId = clusterWorkerId || 0;\n\n        return function () {\n            var str = '',\n                seconds = Math.floor((new Date().getTime() - REDUCE_TIME) * 0.001);\n\n            if (seconds === previousSeconds) {\n                counter++;\n            } else {\n                counter = 0;\n                previousSeconds = seconds;\n            }\n\n            str = str + encode(version) + encode(clusterWorkerId);\n            if (counter > 0) {\n                str = str + encode(counter);\n            }\n            str = str + encode(seconds);\n\n            return str;\n        };\n    }();\n\n    //endregion\n\n    //region User Interface\n\n    okanjo.ui = {\n\n        /**\n         * Gets the current page scroll position\n         * @returns {{x: Number, y: Number}}\n         */\n        getScrollPosition: function getScrollPosition() {\n            return {\n                x: SUPPORTS_PAGE_OFFSET ? window.pageXOffset : /* istanbul ignore next: old browsers */CSS1_COMPATIBLE ? document.documentElement.scrollLeft : document.body.scrollLeft,\n                y: SUPPORTS_PAGE_OFFSET ? window.pageYOffset : /* istanbul ignore next: old browsers */CSS1_COMPATIBLE ? document.documentElement.scrollTop : document.body.scrollTop\n            };\n        },\n\n        /**\n         * Gets the height and width of the given element\n         * @param {HTMLElement|Node} element – The DOM element to get the size of\n         * @param {boolean} [includeMargin] – Whether to include the margins of the element in the size\n         * @returns {{height: number, width: number}}\n         */\n        getElementSize: function getElementSize(element, includeMargin) {\n            var size = {\n                height: element.offsetHeight,\n                width: element.offsetWidth\n            };\n            var style = element.currentStyle || window.getComputedStyle(element);\n\n            if (includeMargin) {\n                size.height += parseInt(style.marginTop) + parseInt(style.marginBottom);\n                size.width += parseInt(style.marginLeft) + parseInt(style.marginRight);\n            }\n\n            return size;\n        },\n\n        /**\n         * Gets the current page size\n         * @return {{w: number, h: number}}\n         */\n        getPageSize: function getPageSize() {\n            var body = document.querySelector('body');\n            var html = document.documentElement;\n\n            return {\n                w: Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth),\n\n                h: Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight)\n            };\n        },\n\n        /**\n         * Gets the current viewport size\n         * @return {{vw: number, vh: number}}\n         */\n        getViewportSize: function getViewportSize() {\n            var element = CSS1_COMPATIBLE ? document.documentElement /* istanbul ignore next: browser diffs */ : document.body;\n            var width = element.clientWidth;\n            var height = element.clientHeight;\n            var inWidth = window.innerWidth /* istanbul ignore next: browser diffs */ || 0;\n            var inHeight = window.innerHeight /* istanbul ignore next: browser diffs */ || 0;\n            var isMobileZoom = inWidth && width > inWidth || inHeight && height > inHeight;\n\n            return {\n                vw: isMobileZoom /* istanbul ignore next: browser diffs */ ? inWidth : width,\n                vh: isMobileZoom /* istanbul ignore next: browser diffs */ ? inHeight : height\n            };\n        },\n\n        /**\n         * Gets the x, y location of the event relative to the page\n         * @param event – Mouse/Touch Event\n         * @return {{ex: number, ey: number}}\n         */\n        getEventPosition: function getEventPosition(event) {\n            var ex = event.pageX;\n            var ey = event.pageY;\n            var body = document.body;\n            var el = document.documentElement;\n            var scrollLeft = 'scrollLeft';\n            var scrollTop = 'scrollTop';\n            var type = event.__proto__.constructor.name;\n\n            return {\n                et: type, // mouse? touch? keyboard? robot?\n                ex: ex === undefined /* istanbul ignore next: browser diffs */ ? event.clientX + body[scrollLeft] + el[scrollLeft] : ex,\n                ey: ey === undefined /* istanbul ignore next: browser diffs */ ? event.clientY + body[scrollTop] + el[scrollTop] : ey\n            };\n        },\n\n        /**\n         * Gets the element's rectangle coordinates on the page\n         * @param element\n         * @return {{x1: number, y1: number, x2: number, y2: number}}\n         */\n        getElementPosition: function getElementPosition(element) {\n\n            // Wrapped in try-catch because IE is super strict about the\n            // element being on the DOM before you call this. Other browsers\n            // let it slide, but oh well.\n\n            var err = 'Could not get position of element. Did you attach the element to the DOM before initializing?';\n            try {\n                var rect = element.getBoundingClientRect();\n                var body = document.body.getBoundingClientRect();\n                // let pos = okanjo.ui.getScrollPosition();\n\n                /* istanbul ignore else: jsdom doesn't mock this */\n                if (!document.body.contains(element)) {\n                    okanjo.report(err, element);\n                }\n                return {\n                    // x1: rect.left + pos.x,\n                    // y1: rect.top + pos.y,\n                    // x2: rect.right + pos.x,\n                    // y2: rect.bottom + pos.y\n\n                    // This might fix\n                    x1: rect.left - body.left,\n                    y1: rect.top - body.top,\n                    x2: rect.right - body.left,\n                    y2: rect.bottom - body.top\n\n                };\n            } catch (e) {\n                okanjo.report(err, { exception: e, element: element });\n                return {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                    err: 1\n                };\n            }\n        },\n\n        /**\n         * Gets the intersection information given the element, viewport and scroll positions\n         * @param e – Element position\n         * @param s - Scroll position\n         * @param v - Viewport size\n         * @return {{intersectionArea: number, elementArea: number}}\n         * @private\n         */\n        _getIntersection: function _getIntersection(e, s, v) {\n            var iLeft = Math.max(e.x1, s.x),\n                iRight = Math.min(e.x2, s.x + v.vw),\n                iTop = Math.max(e.y1, s.y),\n                iBottom = Math.min(e.y2, s.y + v.vh),\n                intersectionArea = Math.max(0, iRight - iLeft) * Math.max(0, iBottom - iTop),\n                elementArea = (e.x2 - e.x1) * (e.y2 - e.y1);\n\n            return {\n                intersectionArea: intersectionArea,\n                elementArea: elementArea\n            };\n        },\n\n        /**\n         * Gets the percentage of the element pixels currently within the viewport\n         * @param {HTMLElement|Node} element\n         * @return {number}\n         */\n        getPercentageInViewport: function getPercentageInViewport(element) {\n            var e = okanjo.ui.getElementPosition(element),\n                s = okanjo.ui.getScrollPosition(),\n                v = okanjo.ui.getViewportSize();\n\n            // If there was a problem getting the element position, fail fast\n            if (e.err) return 0;\n\n            // Get intersection rectangle\n\n            var _okanjo$ui$_getInters = okanjo.ui._getIntersection(e, s, v),\n                intersectionArea = _okanjo$ui$_getInters.intersectionArea,\n                elementArea = _okanjo$ui$_getInters.elementArea;\n\n            // Don't let it return NaN\n            /* istanbul ignore else: jsdom no love positional data */\n\n\n            if (elementArea <= 0) return 0;\n\n            /* istanbul ignore next: jsdom no love positional data, area tested with helper fn tho */\n            return intersectionArea / elementArea;\n        }\n    };\n\n    /**\n     * Splits the text in the element to fit within the visible height of its container, and separates with an ellipses\n     * @param {HTMLElement|Node} element – The DOM element containing the text to fit\n     * @param {HTMLElement} [container] – Optional container to compute fit on. Defaults to the element's parent\n     */\n    okanjo.ui.ellipsify = function (element, container) {\n\n        // It's a sad day when you have to resort to JS because CSS kludges are too hacky to work down to IE8, programmatically\n\n        //noinspection JSValidateTypes\n        var parent = container || element.parentNode,\n            targetHeight = okanjo.ui.getElementSize(parent).height,\n            useTextContent = element.textContent !== undefined;\n\n        var text = useTextContent ? element.textContent /* istanbul ignore next: browser diffs */ : element.innerText,\n            replacedText = \"\",\n            safety = 5000,\n            // Safety switch to bust out of the loop in the event something goes terribly wrong\n        replacer = function replacer(match) {\n            /* istanbul ignore next: n/a to jsdom */\n            replacedText = match.substr(0, match.length - 3) + replacedText;\n            /* istanbul ignore next: n/a to jsdom */\n            return '...';\n        };\n\n        // Trim off characters until we can fit the text and ellipses\n        // If the text already fits, this loop is ignored\n        /* istanbul ignore next: jsdom doesn't do element size computing stuff */\n        while (okanjo.ui.getElementSize(element).height > targetHeight && text.length > 0 && safety-- > 0) {\n            text = useTextContent ? element.textContent : element.innerText;\n\n            text = text.replace(ELLIPSIFY_PATTERN, replacer);\n\n            if (useTextContent) {\n                element.textContent = text;\n            } else {\n                element.innerText = text;\n            }\n        }\n\n        // If there is work to do, split the content into two span tags\n        // Like so: [content]...[hidden content]\n        /* istanbul ignore if: n/a to jsdom */\n        if (replacedText.length > 0) {\n\n            var content = document.createElement('span'),\n                span = document.createElement('span');\n\n            content.setAttribute('class', 'okanjo-ellipses');\n            span.setAttribute('class', 'okanjo-visually-hidden');\n\n            if (useTextContent) {\n                content.textContent = text.substr(0, text.length - 3);\n                span.textContent = replacedText;\n            } else {\n                content.innerText = text.substr(0, text.length - 3);\n                span.innerText = replacedText;\n            }\n\n            element.innerHTML = '';\n            element.appendChild(content);\n            element.appendChild(span);\n        }\n    };\n\n    //endregion\n\n    // Export the root namespace\n    return window.okanjo = okanjo;\n}(window, document);\n\"use strict\";\n\n(function (window) {\n\n    var JSON_TEST = /^application\\/json/;\n    var okanjo = window.okanjo;\n\n    /**\n     * Performs a reliable XHR request\n     * @param {string} method - Request method\n     * @param {string} url - URL\n     * @param [payload] optional payload\n     * @param callback Fired on when completed (err, res), normalized to standard response format\n     */\n    okanjo.net.request = function (method, url, payload, callback) {\n\n        // payload is not required\n        if (typeof payload === \"function\") {\n            callback = payload;\n            payload = undefined;\n        }\n\n        // Create a new instance\n        var req = new (window.XMLHttpRequest /* istanbul ignore next: old ie */ || window.ActiveXObject)('MSXML2.XMLHTTP.3.0');\n\n        // Flag to prevent duplicate callbacks / races\n        var calledBack = false;\n\n        // Normalized done handler\n        var done = function done(err, res) {\n            /* istanbul ignore else: out of scope */\n            if (!calledBack) {\n                calledBack = true;\n                callback(err, res);\n            }\n        };\n\n        // Apply timeout if configured globally\n        if (okanjo.net.request.timeout) {\n            req.timeout = okanjo.net.request.timeout;\n        }\n\n        // Catch timeout errors\n        req.ontimeout = function (e) {\n            /* istanbul ignore next: idk if jsdom can mock this, also readystatechange may fire before this anyway */\n            done({\n                statusCode: 504,\n                error: \"Request timed out\",\n                message: 'Something went wrong',\n                attributes: {\n                    event: e,\n                    xhr: req\n                }\n            });\n        };\n\n        // Handle the response\n        req.onreadystatechange = function (e) {\n            // 4 = completed / failed\n            if (req.readyState === 4) {\n                // Do we have a response?\n                if (req.status > 0) {\n                    var res = void 0;\n\n                    // Check if we got JSON and parse it right away\n                    if (JSON_TEST.test(req.getResponseHeader('Content-Type'))) {\n                        res = JSON.parse(req.responseText);\n                    } else {\n                        // Not JSON, normalize it instead\n                        res = {\n                            statusCode: req.status,\n                            data: req.responseText\n                        };\n                    }\n\n                    // Put the response in the proper slot (err for non success responses)\n                    if (req.status >= 200 && req.status < 300) {\n                        done(null, res);\n                    } else {\n                        done(res);\n                    }\n                } else {\n                    // Request failed - e.g. CORS or network issues\n                    done({\n                        statusCode: 503,\n                        error: \"Request failed\",\n                        message: 'Something went wrong',\n                        attributes: {\n                            event: e,\n                            xhr: req\n                        }\n                    });\n                }\n            }\n        };\n\n        // Open the request\n        req.open(method.toUpperCase(), url);\n\n        // Include credentials\n        req.withCredentials = true;\n\n        // Handle post payloads\n        if (['POST', 'PUT', 'PATCH'].includes(method.toUpperCase())) {\n            req.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n            if (payload !== undefined) {\n                payload = JSON.stringify(payload);\n            }\n        }\n\n        // Ship it\n        req.send(payload || undefined);\n    };\n\n    // Bind helpers to make things easy as pie\n    okanjo.net.request.get = okanjo.net.request.bind(this, 'GET');\n    okanjo.net.request.post = okanjo.net.request.bind(this, 'POST');\n    okanjo.net.request.put = okanjo.net.request.bind(this, 'PUT');\n    okanjo.net.request.delete = okanjo.net.request.bind(this, 'DELETE');\n\n    /**\n     * Helper to aid in minificiation+querystringify and redundant encodeURIComponent stuff\n     * @param val\n     * @return {*}\n     */\n    var encode = function encode(val) {\n        if (val === null || val === undefined) return '';\n        return encodeURIComponent('' + val);\n    };\n\n    /**\n     * Helper to aid in getting a query string key using a prefix and keyname\n     * @param key\n     * @param keyPrefix\n     * @return {*}\n     */\n    var getKey = function getKey(key, keyPrefix) {\n        if (keyPrefix) {\n            return keyPrefix + '[' + encode(key) + ']';\n        } else {\n            return encode(key);\n        }\n    };\n\n    /**\n     * Super basic querystringify helper. It handles deep objects, but not for array values\n     * @param obj\n     * @param [keyPrefix]\n     * @return {string}\n     */\n    okanjo.net.request.stringify = function (obj, keyPrefix) {\n        var pairs = [];\n        keyPrefix = keyPrefix || \"\";\n        Object.keys(obj).forEach(function (key) {\n            var value = obj[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (v) {\n                    return pairs.push(getKey(key, keyPrefix) + '=' + encode(v));\n                }); // Does not do that PHP garbage with key[]=val\n            } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === \"object\" && value !== null) {\n                // Recurse\n                var res = okanjo.net.request.stringify(value, getKey(key, keyPrefix));\n                if (res) pairs.push(res);\n            } else if (value !== undefined) {\n                pairs.push(getKey(key, keyPrefix) + '=' + encode(value));\n            }\n        });\n        return pairs.join('&');\n    };\n})(window);\n\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS\n(function (window, document) {\n\n    /**\n     * Okanjo cookie utility helpers\n     */\n    window.okanjo.util.cookie = {\n\n        /**\n         * Sets a cookie\n         * @param cookieName\n         * @param value\n         * @param expireDays\n         */\n        set: function set(cookieName, value, expireDays) {\n            var expireDate = new Date();\n            expireDate.setDate(expireDate.getDate() + expireDays);\n            var expires = expireDays ? \" Expires=\" + expireDate.toUTCString() + \";\" : \"\";\n            var path = \" Path=/\";\n            var cookieValue = encodeURI(value) + ';' + expires + path;\n            document.cookie = cookieName + \"=\" + cookieValue;\n        },\n\n        /**\n         * Gets a cookie\n         * @param cookieName\n         * @return {*}\n         */\n        get: function get(cookieName) {\n            var output = null;\n            document.cookie.split(\";\").find(function (cookie) {\n                var nameTest = cookie.substr(0, cookie.indexOf(\"=\")).trim();\n                var value = cookie.substr(cookie.indexOf(\"=\") + 1);\n                if (nameTest === cookieName) {\n                    output = decodeURI(value);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n            return output;\n        }\n    };\n})(window, document);\n\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n(function (window, document) {\n\n    var okanjo = window.okanjo;\n\n    /**\n     * Event tracking class\n     * @type {Metrics}\n     */\n\n    var Metrics = function () {\n\n        //noinspection JSUnusedGlobalSymbols\n        function Metrics() {\n            _classCallCheck(this, Metrics);\n\n            /**\n             * Events queued here before submission\n             * @type {Array}\n             * @private\n             */\n            this._queue = this._getStoredQueue();\n            this._processTimeout = null; // queue event loop timeout pointer\n\n            /**\n             * Unique page grouping event identifier\n             */\n            this.pageId = okanjo.util.shortid();\n            this.defaultChannel = Metrics.Channel.external;\n\n            this.sid = null;\n            this.sourceCh = null;\n            this.sourceCx = null;\n\n            // Extract referral data, if set\n            this._checkUrlForReferral();\n\n            // TODO - look into iframe session correlation system\n        }\n\n        //noinspection JSMethodCanBeStatic\n        /**\n         * Gets the storage backed metric queue, in case we did not send everything last time\n         * @return {Array}\n         * @private\n         */\n\n\n        _createClass(Metrics, [{\n            key: '_getStoredQueue',\n            value: function _getStoredQueue() {\n                if (window.localStorage[Metrics.Params.queue]) {\n                    try {\n                        var queue = JSON.parse(window.localStorage[Metrics.Params.queue]);\n                        if (Array.isArray(queue)) {\n                            return queue;\n                        } else {\n                            okanjo.report('Stored queue is not a queue', { queue: queue });\n                            return [];\n                        }\n                    } catch (e) {\n                        okanjo.report('Failed to load metric queue from storage', { err: e });\n                        return [];\n                    }\n                } else {\n                    // not stored\n                    return [];\n                }\n            }\n\n            /**\n             * Updates the queue stored in storage, in the event we can't complete our submissions\n             * @param delay - Whether to delay updating the queue for a bit, to let other metrics pile in\n             * @private\n             */\n\n        }, {\n            key: '_saveQueue',\n            value: function _saveQueue(delay) {\n                var _this = this;\n\n                if (delay) {\n                    if (this._saveQueueTimeout) clearTimeout(this._saveQueueTimeout);\n                    this._saveQueueTimeout = setTimeout(function () {\n                        _this._saveQueue(false);\n                        _this._saveQueueTimeout = null;\n                    }, 100);\n                } else {\n                    window.localStorage[Metrics.Params.queue] = JSON.stringify(this._queue);\n                }\n            }\n\n            /**\n             * Extract contextual pass-through data from the URL, if present\n             * @private\n             */\n\n        }, {\n            key: '_checkUrlForReferral',\n            value: function _checkUrlForReferral() {\n                var pageArgs = okanjo.util.getPageArguments(true),\n                    urlSid = pageArgs[Metrics.Params.name],\n                    localSid = window.localStorage[Metrics.Params.name] || okanjo.util.cookie.get(Metrics.Params.name),\n                    // pull from storage or cookie\n                sourceContext = pageArgs[Metrics.Params.context],\n                    sourceChannel = pageArgs[Metrics.Params.channel];\n\n                // If for some reason, both are set, record the incident as a possible correlation\n                if (urlSid && localSid && urlSid !== localSid) {\n                    this.trackEvent({\n                        object_type: Metrics.Object.metric_session,\n                        event_type: Metrics.Event.correlation,\n                        id: urlSid + \"_\" + localSid,\n                        ch: this.defaultChannel,\n                        _noProcess: true\n                    });\n                }\n\n                // Update local values\n                this.sid = localSid || urlSid || null; // prefer local over remote (changed in 1.0)\n                this.sourceCh = sourceChannel || null;\n                this.sourceCx = sourceContext || null;\n            }\n\n            /**\n             * Submits an individual event metric\n             * @param event\n             * @param callback\n             */\n\n        }, {\n            key: 'trackEvent',\n            value: function trackEvent(event, callback) {\n                // Ensure the event contains the required fields\n                if (!event.object_type || !event.event_type) {\n                    okanjo.report('Invalid metric to track (missing object_type or event_type)', { event: event });\n                    return;\n                }\n\n                // Queue the event for publishing\n                this._push(event, callback);\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Submits a page view metric\n             * @param event\n             * @param callback\n             */\n\n        }, {\n            key: 'trackPageView',\n            value: function trackPageView(event, callback) {\n                event = event || {};\n                event.object_type = Metrics.Object.page;\n                event.event_type = Metrics.Event.view;\n                event.id = event.id || window.location.href;\n                event.ch = event.ch || this.defaultChannel;\n\n                // Queue the event for publishing\n                this.trackEvent(event, callback);\n            }\n\n            /**\n             * Adds an event to the queue\n             * @param event\n             * @param callback\n             * @private\n             */\n\n        }, {\n            key: '_push',\n            value: function _push(event, callback) {\n                this._queue.push({ event: event, callback: callback });\n\n                // Save the queue\n                this._saveQueue(true);\n\n                // Start burning down the queue, unless the event says not to\n                if (event._noProcess) {\n                    delete event._noProcess;\n                } else {\n                    this._processQueue();\n                }\n            }\n\n            /**\n             * Burn down the queue\n             * @private\n             */\n\n        }, {\n            key: '_processQueue',\n            value: function _processQueue() {\n                var _this2 = this;\n\n                // If the queue is not already being processed, and there's stuff to process, continue sending them\n                if (!this._processTimeout && this._queue.length > 0) {\n                    this._processTimeout = setTimeout(function () {\n\n                        // Pull the items we're going to batch out of the queue\n                        var items = _this2._queue.splice(0, 255);\n                        _this2._saveQueue(false);\n\n                        // Track the item\n                        _this2._batchSend(items, function (err, res) {\n                            // TODO: If there was an error, consider splicing the batch back into the queue\n\n                            // Update / Set the metric sid on the publisher\n                            /* istanbul ignore else: server barks */\n                            if (res && res.data && res.data.sid) _this2._updateSid(res.data.sid);\n\n                            // When this batch is done being tracked, iterate to the next metric then fire it's callback if set\n                            _this2._processTimeout = null;\n                            _this2._processQueue();\n\n                            // Fire the event callbacks if there are any\n                            items.forEach(function (item) {\n                                item.callback && item.callback(err, res);\n                            });\n                        });\n                    }, 0); // break event loop, maybe\n                }\n            }\n\n            /**\n             * Sends a bunch of queued metric events\n             * @param items\n             * @param callback\n             * @private\n             */\n\n        }, {\n            key: '_batchSend',\n            value: function _batchSend(items, callback) {\n                var _this3 = this;\n\n                // Normalize event data\n                var events = items.map(function (item) {\n                    _this3._normalizeEvent(item.event);\n\n                    // Strip duplicated data from event batch\n                    delete item.event.sid;\n                    delete item.event.win;\n\n                    return item.event;\n                });\n\n                var payload = {\n                    events: events,\n                    win: window.location.href\n                };\n\n                var route = okanjo.net.getRoute(okanjo.net.routes.metrics_batch);\n\n                // Set sid if present\n                if (this.sid) {\n                    payload.sid = this.sid;\n                }\n\n                // Send it\n                okanjo.net.request.post(route, payload, function (err, res) {\n                    /* istanbul ignore if: out of scope */\n                    if (err) {\n                        okanjo.report('Failed to send metrics batch', { err: err, res: res, items: items, route: route });\n                    }\n                    callback && callback(err, res);\n                });\n            }\n\n            /**\n             * Normaizes events so that they contain consistent data values\n             * @param event\n             * @private\n             */\n\n        }, {\n            key: '_normalizeEvent',\n            value: function _normalizeEvent(event) {\n\n                // Ensure meta is ready to receive values\n                event.m = event.m || {};\n\n                // Set key\n                event.key = event.key || event.m.key || okanjo.key || undefined;\n\n                // Set session\n                if (this.sid) event.sid = this.sid;\n\n                // Clone the metadata, since it might be a direct reference to a widget property\n                // Deleting properties on the meta object could be very destructive\n                event.m = Object.assign({}, event.m); // event.m should be flat\n\n                // Strip meta keys that should be excluded\n                Object.keys(Metrics.Meta.exclude).forEach(function (key) {\n                    return delete event.m[key];\n                });\n\n                // Set referral channel / context\n                if (this.sourceCh) {\n                    event.m.ref_ch = this.sourceCh;\n                }\n                if (this.sourceCx) {\n                    event.m.ref_cx = this.sourceCx;\n                }\n\n                // Set page group id\n                event.m.pgid = this.pageId;\n\n                // Set okanjo version\n                event.m.ok_ver = okanjo.version;\n\n                // Finalize metadata\n                event.m = okanjo.util.flatten(event.m, { arrayToCsv: true });\n\n                // Ensure metadata strings won't exceed the imposed limit\n                Object.keys(event.m).forEach(function (key) {\n                    if (typeof event.m[key] === \"string\") {\n                        event.m[key] = event.m[key].substr(0, 255);\n                    }\n                });\n\n                // Set page source reference\n                if (document.referrer) {\n                    event.ref = document.referrer;\n                }\n\n                // Set the window location\n                event.win = window.location.href;\n            }\n\n            /**\n             * Updates the stored session identifier\n             * @param sid\n             * @private\n             */\n\n        }, {\n            key: '_updateSid',\n            value: function _updateSid(sid) {\n                if (!this.sid && sid) {\n                    this.sid = sid;\n                    window.localStorage[Metrics.Params.name] = sid;\n                    okanjo.util.cookie.set(Metrics.Params.name, sid, Metrics.Params.ttl);\n                }\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Adds DOM element dimensions / positional data to the event\n             * @param element\n             * @param event\n             * @return {*|{}}\n             */\n\n        }, {\n            key: 'create',\n\n\n            //noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n            /**\n             * Helper to create a new fluent event structure\n             * @param args\n             * @return {*}\n             */\n            value: function create() {\n                for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                    args[_key3] = arguments[_key3];\n                }\n\n                return Metrics.create.apply(null, args);\n            }\n        }], [{\n            key: 'addElementInfo',\n            value: function addElementInfo(element, event) {\n                var page = okanjo.ui.getPageSize(),\n                    size = okanjo.ui.getElementPosition(element);\n\n                event = event || {};\n                event.m = event.m || {};\n                event.m.pw = page.w;\n                event.m.ph = page.h;\n                event.m.x1 = size.x1;\n                event.m.y1 = size.y1;\n                event.m.x2 = size.x2;\n                event.m.y2 = size.y2;\n\n                return event;\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Adds viewport dimensions / positional data to the event\n             * @param event\n             * @return {*|{}}\n             */\n\n        }, {\n            key: 'addViewportInfo',\n            value: function addViewportInfo(event) {\n                var vp = okanjo.ui.getViewportSize(),\n                    pos = okanjo.ui.getScrollPosition();\n\n                event = event || {};\n                event.m = event.m || {};\n                event.m.vx1 = pos.x;\n                event.m.vy1 = pos.y;\n                event.m.vx2 = pos.x + vp.vw;\n                event.m.vy2 = pos.y + vp.vh;\n\n                return event;\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Adds DOM event positional data to the event\n             * @param jsEvent\n             * @param event\n             * @return {*|{}}\n             */\n\n        }, {\n            key: 'addEventInfo',\n            value: function addEventInfo(jsEvent, event) {\n                var pos = okanjo.ui.getEventPosition(jsEvent);\n\n                event = event || {};\n                event.m = event.m || {};\n                event.m.et = pos.et;\n                event.m.ex = pos.ex;\n                event.m.ey = pos.ey;\n\n                return event;\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Adds meta data values to the event\n             * @param event\n             * @param args\n             * @return {*|{}}\n             */\n\n        }, {\n            key: 'addEventMeta',\n            value: function addEventMeta(event) {\n                event = event || {};\n                event.m = event.m || {};\n\n                for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                    args[_key4 - 1] = arguments[_key4];\n                }\n\n                event.m = Object.assign.apply(Object, [event.m].concat(args));\n\n                return event;\n            }\n\n            /**\n             * Helper to create a new fluent event structure\n             * @param data\n             * @param args\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'create',\n            value: function create(data) {\n                for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                    args[_key5 - 1] = arguments[_key5];\n                }\n\n                // return okanjo.util.deepClone(Object.assign.apply(Object, [{}].concat(args)));\n                return new MetricEvent(data, args);\n            }\n        }]);\n\n        return Metrics;\n    }();\n\n    /**\n     * The storage/cookie/url param names\n     * @type {{queue: string, name: string, channel: string, context: string, ttl: number}}\n     */\n\n\n    Metrics.Params = {\n        queue: '_ok_q',\n        name: 'ok_msid',\n        channel: 'ok_ch',\n        context: 'ok_cx',\n        ttl: 1460 // 4 years\n    };\n\n    /**\n     * Event Metadata configuration\n     * @type {{exclude: [*]}}\n     */\n    Metrics.Meta = {\n        exclude: ['key', 'callback', 'metrics_channel_context', 'metrics_context', 'mode']\n    };\n\n    /**\n     * Event Types\n     * @type {{view: string, impression: string, interaction: string, correlation: string}}\n     */\n    Metrics.Event = {\n        view: 'vw',\n        impression: 'imp',\n        interaction: 'int',\n        correlation: 'cor'\n    };\n\n    /**\n     * Event Action Types\n     * @type {{click: string, inline_click: string}}\n     */\n    Metrics.Action = {\n        click: \"click\",\n        inline_click: \"inline_click\"\n    };\n\n    /**\n     * Event Object Types\n     * @type {{article: string, thirdparty_ad: string, cart: string, page: string, widget: string, product: string, store: string, cause: string, marketplace: string, order: string, order_item: string, user: string, metric_session: string}}\n     */\n    Metrics.Object = {\n        article: 'am',\n        thirdparty_ad: 'ta',\n        cart: 'ct',\n        page: 'pg',\n        widget: 'wg',\n        product: 'pr',\n        store: 'st',\n        cause: 'ca',\n        marketplace: 'mp',\n        order: 'or',\n        order_item: 'oi',\n        user: 'ur',\n        metric_session: 'mt'\n    };\n\n    /**\n     * Event Channels\n     * @type {{product_widget: string, ad_widget: string, store_widget: string, marketplace: string, external: string}}\n     */\n    Metrics.Channel = {\n        placement: 'pw',\n        marketplace: 'mp',\n        external: 'ex',\n\n        // Deprecated:\n        product_widget: 'pw',\n        ad_widget: 'aw',\n        store_widget: 'sw'\n    };\n\n    /**\n     * Event Environments\n     * @type {{live: string, testing: string}}\n     */\n    Metrics.Environment = {\n        live: \"live\",\n        testing: \"testing\"\n    };\n\n    /**\n     * Fluent wrapper around making events simple\n     */\n\n    var MetricEvent = function () {\n        function MetricEvent(data, others) {\n            var _this4 = this;\n\n            _classCallCheck(this, MetricEvent);\n\n            // Merge the data and other data sets into this object\n            data = data || {};\n            this.data(data);\n            /* istanbul ignore else: metrics.create is the only way to create this right now */\n            if (Array.isArray(others)) {\n                others.forEach(function (data) {\n                    _this4.data(data);\n                });\n            }\n        }\n\n        /**\n         * Sets event parameter key-values\n         * @param data\n         */\n\n\n        _createClass(MetricEvent, [{\n            key: 'data',\n            value: function data(_data) {\n                Object.assign(this, okanjo.util.deepClone(_data));\n                return this;\n            }\n\n            /**\n             * Adds DOM event positional data to the event\n             * @param jsEvent\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'event',\n            value: function event(jsEvent) {\n                Metrics.addEventInfo(jsEvent, this);\n                return this;\n            }\n\n            /**\n             * Adds viewport dimensions / positional data to the event\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'viewport',\n            value: function viewport() {\n                Metrics.addViewportInfo(this);\n                return this;\n            }\n\n            /**\n             * Adds DOM element dimensions / positional data to the event\n             * @param element\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'element',\n            value: function element(_element) {\n                Metrics.addElementInfo(_element, this);\n                return this;\n            }\n\n            //noinspection JSUnusedGlobalSymbols\n            /**\n             * Adds meta data values to the event\n             * @param args\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'meta',\n            value: function meta() {\n                for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n                    args[_key6] = arguments[_key6];\n                }\n\n                Metrics.addEventMeta.apply(null, [this].concat(args));\n                return this;\n            }\n\n            /**\n             * Sets the object and event type on the event w/o having to use .data\n             * @param object_type\n             * @param event_type\n             * @return {MetricEvent}\n             */\n\n        }, {\n            key: 'type',\n            value: function type(object_type, event_type) {\n                this.object_type = object_type;\n                this.event_type = event_type;\n                return this;\n            }\n\n            /**\n             * Finalizes and sends the event\n             * @param callback\n             */\n\n        }, {\n            key: 'send',\n            value: function send(callback) {\n                okanjo.metrics.trackEvent(this, callback);\n                // DONT RETURN - BREAK THE CHAIN HERE\n            }\n\n            /**\n             * Gets the single-metric tracking url for this event\n             * @return {string}\n             */\n\n        }, {\n            key: 'toUrl',\n            value: function toUrl() {\n                // Copy data w/o modifying it\n                var event = Object.assign({}, this);\n\n                // Extract params\n                var object_type = event.object_type,\n                    event_type = event.event_type;\n\n                delete event.object_type;\n                delete event.event_type;\n\n                // Normalize event data\n                okanjo.metrics._normalizeEvent(event);\n\n                // Get the URL\n                return okanjo.net.getRoute(okanjo.net.routes.metrics, { object_type: object_type, event_type: event_type }) + '?' + okanjo.net.request.stringify(event);\n            }\n        }]);\n\n        return MetricEvent;\n    }();\n\n    // Export / initialize\n\n\n    okanjo.metrics = new Metrics();\n})(window, document);\nreturn okanjo;\n}));\n","// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n    Array.from = (function () {\n        var toStr = Object.prototype.toString;\n        var isCallable = function (fn) {\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function (value) {\n            var number = Number(value);\n            if (isNaN(number)) { return 0; }\n            if (number === 0 || !isFinite(number)) { return number; }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function (value) {\n            var len = toInteger(value);\n            return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n\n        // The length property of the from method is 1.\n        return function from(arrayLike/*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            var C = this;\n\n            // 2. Let items be ToObject(arrayLike).\n            var items = Object(arrayLike);\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n            var T;\n            if (typeof mapFn !== 'undefined') {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2];\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            var len = toLength(items.length);\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n            // 16. Let k be 0.\n            var k = 0;\n            // 17. Repeat, while k < len… (also steps a - h)\n            var kValue;\n            while (k < len) {\n                kValue = items[k];\n                if (mapFn) {\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n                } else {\n                    A[k] = kValue;\n                }\n                k += 1;\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len;\n            // 20. Return A.\n            return A;\n        };\n    }());\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}","// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nif (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n        value: function(searchElement, fromIndex) {\n\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            // 1. Let O be ? ToObject(this value).\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If len is 0, return false.\n            if (len === 0) {\n                return false;\n            }\n\n            // 4. Let n be ? ToInteger(fromIndex).\n            //    (If fromIndex is undefined, this step produces the value 0.)\n            var n = fromIndex | 0;\n\n            // 5. If n ≥ 0, then\n            //  a. Let k be n.\n            // 6. Else n < 0,\n            //  a. Let k be len + n.\n            //  b. If k < 0, let k be 0.\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            function sameValueZero(x, y) {\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\n            }\n\n            // 7. Repeat, while k < len\n            while (k < len) {\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\n                if (sameValueZero(o[k], searchElement)) {\n                    return true;\n                }\n                // c. Increase k by 1.\n                k++;\n            }\n\n            // 8. Return false\n            return false;\n        }\n    });\n}","// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n        value: function assign(target, varArgs) { // .length of function is 2\n            'use strict';\n            if (target == null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}","\"use strict\";\n\n/* exported okanjo */\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n/**\n * Okanjo widget framework namespace\n * @global okanjo\n */\nconst okanjo = (function(window, document) {\n\n    //region Constants\n\n    // Environment Vars\n    const SUPPORTS_PAGE_OFFSET = window.pageXOffset !== undefined;\n    const CSS1_COMPATIBLE = (document.compatMode /* istanbul ignore next: out of scope */ || \"\") === \"CSS1Compat\";\n    const AGENT = window.navigator.userAgent;\n    const ELLIPSIFY_PATTERN = /[\\s\\S](?:\\.\\.\\.)?$/;\n    const MOBILE_PATTERN = /(iPhone|iPad|iPod|Android|blackberry)/i;\n    const NOOP = () => {};\n    const Console = window.console;\n\n    // Place to pull defaults, if already set\n    const settings = window.okanjo || {};\n\n    //endregion\n\n    //region Okanjo Core\n\n\n    //noinspection JSValidateJSDoc,JSClosureCompilerSyntax - idk phpStorm generated it so why would it be wrong? :P\n    /**\n     * Okanjo namespace\n     * @global\n     * @type {{version: string, metrics: null, key: null, report: ((...p1?:*[])), warn: ((p1?:*, ...p2?:*[])), qwery: ((p1?:*, p2?:*))}}\n     */\n    const okanjo = {\n\n        /**\n         * Okanjo version\n         */\n        version: \"%%OKANJO_VERSION\",\n\n        /**\n         * Placeholder\n         */\n        metrics: null,\n\n        /**\n         * Global/default placement key\n         */\n        key: settings.key || null,\n\n        /**\n         * Reports an error to the console and possibly Raven in the future\n         * @param args\n         */\n        report: (...args) => {\n            let err = args.find((arg) => arg instanceof Error);\n            if (!err) {\n                let messageIndex = args.findIndex((arg) => typeof arg === \"string\");\n                err = new Error(args[messageIndex] || \"Okanjo Error\");\n                if (messageIndex >= 0) args.splice(messageIndex, 1);\n            } else {\n                // Grow our own stack so we can figure out what async thing did it\n                let stack = (new Error()).stack.split('\\n');\n                stack.shift();\n                stack.shift();\n                args.push({ reportStack: stack.join('\\n') });\n                args = args.filter((a) => a !== err);\n            }\n\n            Console.error(`[Okanjo v${okanjo.version}]: ${err.stack}`);\n            args.length && Console.error.apply(Console, ['Additional information:'].concat(args));\n\n            // TODO - integrate with Raven\n        },\n\n        /**\n         * Warn developers of their misdeeds\n         * @param message\n         * @param args\n         */\n        warn: (message, ...args) => {\n            const err = new Error(message);\n\n            Console.warn(`[Okanjo v${okanjo.version}]: ${err.stack}`);\n            args.length && Console.warn.apply(Console, ['Additional information:'].concat(args));\n        },\n\n        // Backwards compatibility when we shipped with qwery, cuz querySelector[All] wasn't mainstream enough\n        qwery: (selector, parent) => {\n\n            // If parent is a selector, select the parent first!\n            if (typeof parent === \"string\") {\n                parent = document.querySelector(parent);\n\n                // If parent is not found, there are obviously no results\n                if (!parent) return [];\n            }\n\n            if (!parent) parent = document;\n\n            return parent.querySelectorAll(selector);\n        }\n    };\n\n    //endregion\n\n    //region Vendor Libs\n\n    /**\n     * Placeholder for where vendor libraries get no-conflict loaded\n     * @type {{}}\n     */\n    okanjo.lib = {};\n\n    //endregion\n\n    //region Networking\n\n    /**\n     * Networking methods\n     * @type {{getRoute: *, exec: *}}\n     */\n    okanjo.net = {\n\n        /**\n         * API Endpoints\n         */\n        endpoint: 'https://api2.okanjo.com',\n        sandboxEndpoint: 'https://sandbox-api2.okanjo.com',\n\n        /**\n         * API routes\n         */\n        routes: {\n            ads: '/content',\n            metrics: '/metrics/:object_type/:event_type',\n            metrics_batch: '/metrics'\n        },\n\n        /**\n         * Compiles a route and parameters into a final URL\n         * @param {string} route - Route constant\n         * @param {*} [params] - Key value hash\n         * @param {*} [env] - Optional environment to use instead of live\n         * @return {string} - Route\n         */\n        getRoute: (route, params, env) => {\n            if (params) {\n                Object.keys(params).forEach((key) => {\n                    route = route.replace(`:${key}`, params[key]+\"\");\n                });\n            }\n            env = env || okanjo.env || 'live';\n            return (env === 'sandbox' ? okanjo.net.sandboxEndpoint : okanjo.net.endpoint) + route;\n        },\n\n        // placeholder, xhr request extension\n        request: NOOP\n    };\n\n    //endregion\n\n    // region Utilities\n\n    //noinspection JSClosureCompilerSyntax,JSValidateJSDoc\n    /**\n     * Utility functions and helpers\n     * @type {{isEmpty: ((p1?:*)=>boolean), isMobile: (()), getPageArguments: ((p1:boolean))}}\n     */\n    okanjo.util = {\n\n        /**\n         * Checks whether a value is _really_ empty (trims)\n         * @param val\n         * @return {boolean}\n         */\n        isEmpty: (val) => val === null || val === undefined || (typeof val === \"string\" && val.trim().length === 0),\n\n        /**\n         * Checks if the current user agent identifies as a mobile device\n         * @returns {boolean}\n         */\n        isMobile: () => {\n            // KludgyAF™, but let's go with it\n            return MOBILE_PATTERN.test(AGENT);\n        },\n\n        /**\n         * Returns an object hashmap of query and hash parameters\n         * @param {boolean} includeHashArguments - Whether to include the hash arguments, if any\n         * @return {*}\n         */\n        getPageArguments: (includeHashArguments) => {\n\n            const split = (query) => {\n                query = query || \"\";\n                const params = {};\n                const parts = query.split('&');\n                parts.forEach((part) => {\n                    const eqIndex = part.indexOf('=');\n                    let key, value;\n                    if (eqIndex < 0) {\n                        key = decodeURIComponent(part);\n                        value = null;\n                    } else {\n                        key = decodeURIComponent(part.substring(0, eqIndex));\n                        value = decodeURIComponent(part.substring(eqIndex + 1));\n                    }\n                    if (key) params[key] = value;\n                });\n                return params;\n            };\n\n            const queryArgs = split(window.location.search.substring(window.location.search.indexOf('?') + 1));\n            const hashArgs = includeHashArguments ? split(window.location.hash.substring(Math.max(window.location.hash.indexOf('#') + 1, window.location.hash.indexOf('#!') + 2))) : {};\n            Object.keys(hashArgs).forEach((key) => queryArgs[key] = hashArgs[key]);\n\n            return queryArgs;\n        }\n\n    };\n\n    /**\n     * Deep clones an object by breaking references, unlike Object.assign\n     * @param mixed – Source to clone (object, array, value)\n     * @param [out] - Existing output, if any\n     * @return {*}\n     */\n    okanjo.util.deepClone = (mixed, out) => {\n        if (Array.isArray(mixed)) {\n            // Array reference\n            out = out || [];\n            out = out.concat(mixed.map((val) => okanjo.util.deepClone(val)));\n        } else if (typeof mixed === \"object\" && mixed !== null) {\n            // Object reference\n            out = out || {};\n            Object.keys(mixed).forEach((key) => {\n                out[key] = okanjo.util.deepClone(mixed[key]);\n            });\n        } else {\n            // Value\n            out = mixed;\n        }\n\n        return out;\n    };\n\n    /**\n     * Flattens a multi-dimensional object into a single object\n     * @param input\n     * @param [options]\n     * @return {{}}\n     */\n    okanjo.util.flatten = (input, options = {}) => {\n        const output = {};\n\n        if (input !== undefined && input !== null) {\n            Object\n                .keys(input)\n                .forEach((key) => {\n                    // Convert object ids to hex strings\n                    if (input[key] instanceof Date) {\n                        if (options.dateToIso) {\n                            output[key] = input[key].toISOString(); // convert to iso\n                        } else {\n                            output[key] = input[key]; // as-is\n                        }\n                    } else if (typeof input[key] === 'object' && input[key] !== null) {\n                        // Allow ignoring arrays if desired\n                        if (Array.isArray(input[key]) && options.ignoreArrays === true) {\n                            output[key] = input[key];\n                        } else if (Array.isArray(input[key]) && options.arrayToCsv === true) {\n                            output[key] = input[key].join(',');\n                        } else {\n                            // Make child objects flat too (always returns object so Object.keys is safe)\n                            const childObject = okanjo.util.flatten(input[key], options);\n                            Object\n                                .keys(childObject)\n                                .forEach((childKey) => {\n                                    output[key + '_' + childKey] = childObject[childKey];\n                                })\n                            ;\n                        }\n                    } else {\n                        // Copy value references\n                        output[key] = input[key];\n                    }\n                })\n            ;\n        }\n\n        return output;\n    };\n\n    /*! based on shortid https://github.com/dylang/shortid */\n    okanjo.util.shortid = (function(clusterWorkerId) {\n\n        const shuffled = 'ylZM7VHLvOFcohp01x-fXNr8P_tqin6RkgWGm4SIDdK5s2TAJebzQEBUwuY9j3aC',\n\n            crypto = window.crypto || window.msCrypto || (typeof require === \"function\" && require('crypto')),\n\n            randomByte = () => {\n                /* istanbul ignore next: platform diffs out of scope */\n                if (crypto && crypto.randomBytes) {\n                    return crypto.randomBytes(1)[0] & 0x30;\n                } else if (!crypto || !crypto.getRandomValues) {\n                    return Math.floor(Math.random() * 256) & 0x30;\n                }\n                /* istanbul ignore next: platform diffs out of scope */\n                const dest = new Uint8Array(1);\n                /* istanbul ignore next: platform diffs out of scope */\n                crypto.getRandomValues(dest);\n                /* istanbul ignore next: platform diffs out of scope */\n                return dest[0] & 0x30;\n            },\n\n            encode = (number) => {\n                let loopCounter = 0,\n                    done,\n                    str = '';\n\n                while (!done) {\n                    str = str + shuffled[ ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() ];\n                    done = number < (Math.pow(16, loopCounter + 1 ) );\n                    loopCounter++;\n                }\n                return str;\n            },\n\n            // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n            // This number should be updated every year or so to keep the generated id short.\n            // To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n            REDUCE_TIME = 1490384907498,\n            version = 7;\n\n        let counter,\n            previousSeconds;\n\n        clusterWorkerId = clusterWorkerId || 0;\n\n        return function() {\n            let str = '',\n                seconds = Math.floor(((new Date()).getTime() - REDUCE_TIME) * 0.001);\n\n            if (seconds === previousSeconds) {\n                counter++;\n            } else {\n                counter = 0;\n                previousSeconds = seconds;\n            }\n\n            str = str + encode(version) + encode(clusterWorkerId);\n            if (counter > 0) {\n                str = str + encode(counter);\n            }\n            str = str + encode(seconds);\n\n            return str;\n        };\n    })();\n\n    //endregion\n\n    //region User Interface\n\n    okanjo.ui = {\n\n        /**\n         * Gets the current page scroll position\n         * @returns {{x: Number, y: Number}}\n         */\n        getScrollPosition: () => {\n            return {\n                x: SUPPORTS_PAGE_OFFSET ? window.pageXOffset : /* istanbul ignore next: old browsers */ CSS1_COMPATIBLE ? document.documentElement.scrollLeft : document.body.scrollLeft,\n                y: SUPPORTS_PAGE_OFFSET ? window.pageYOffset : /* istanbul ignore next: old browsers */ CSS1_COMPATIBLE ? document.documentElement.scrollTop : document.body.scrollTop\n            };\n        },\n\n        /**\n         * Gets the height and width of the given element\n         * @param {HTMLElement|Node} element – The DOM element to get the size of\n         * @param {boolean} [includeMargin] – Whether to include the margins of the element in the size\n         * @returns {{height: number, width: number}}\n         */\n        getElementSize: (element, includeMargin) => {\n            const size = {\n                height: element.offsetHeight,\n                width : element.offsetWidth\n            };\n            const style = element.currentStyle || window.getComputedStyle(element);\n\n            if (includeMargin) {\n                size.height += parseInt(style.marginTop) + parseInt(style.marginBottom);\n                size.width += parseInt(style.marginLeft) + parseInt(style.marginRight);\n            }\n\n            return size;\n        },\n\n        /**\n         * Gets the current page size\n         * @return {{w: number, h: number}}\n         */\n        getPageSize: () => {\n            const body = document.querySelector('body');\n            const html = document.documentElement;\n\n            return {\n                w: Math.max(\n                    body.scrollWidth,\n                    body.offsetWidth,\n                    html.clientWidth,\n                    html.scrollWidth,\n                    html.offsetWidth\n                ),\n\n                h: Math.max(\n                    body.scrollHeight,\n                    body.offsetHeight,\n                    html.clientHeight,\n                    html.scrollHeight,\n                    html.offsetHeight\n                )\n            };\n        },\n\n        /**\n         * Gets the current viewport size\n         * @return {{vw: number, vh: number}}\n         */\n        getViewportSize: () => {\n            const element = CSS1_COMPATIBLE ? document.documentElement /* istanbul ignore next: browser diffs */: document.body;\n            const width = element.clientWidth;\n            const height = element.clientHeight;\n            const inWidth = window.innerWidth /* istanbul ignore next: browser diffs */ || 0;\n            const inHeight = window.innerHeight /* istanbul ignore next: browser diffs */ || 0;\n            const isMobileZoom = (inWidth && width > inWidth) || (inHeight && height > inHeight);\n\n            return {\n                vw: isMobileZoom /* istanbul ignore next: browser diffs */ ? inWidth : width,\n                vh: isMobileZoom /* istanbul ignore next: browser diffs */ ? inHeight : height\n            };\n        },\n\n        /**\n         * Gets the x, y location of the event relative to the page\n         * @param event – Mouse/Touch Event\n         * @return {{ex: number, ey: number}}\n         */\n        getEventPosition: (event) => {\n            const ex = event.pageX;\n            const ey = event.pageY;\n            const body = document.body;\n            const el = document.documentElement;\n            const scrollLeft = 'scrollLeft';\n            const scrollTop = 'scrollTop';\n            const type = event.__proto__.constructor.name;\n\n            return {\n                et: type, // mouse? touch? keyboard? robot?\n                ex: ex === undefined /* istanbul ignore next: browser diffs */ ? event.clientX + body[scrollLeft] + el[scrollLeft] : ex,\n                ey: ey === undefined /* istanbul ignore next: browser diffs */ ? event.clientY + body[scrollTop] + el[scrollTop] : ey\n            };\n        },\n\n        /**\n         * Gets the element's rectangle coordinates on the page\n         * @param element\n         * @return {{x1: number, y1: number, x2: number, y2: number}}\n         */\n        getElementPosition: (element) => {\n\n            // Wrapped in try-catch because IE is super strict about the\n            // element being on the DOM before you call this. Other browsers\n            // let it slide, but oh well.\n\n            const err = 'Could not get position of element. Did you attach the element to the DOM before initializing?';\n            try {\n                let rect = element.getBoundingClientRect();\n                let body = document.body.getBoundingClientRect();\n                // let pos = okanjo.ui.getScrollPosition();\n\n                /* istanbul ignore else: jsdom doesn't mock this */\n                if (!document.body.contains(element)) {\n                    okanjo.report(err, element);\n                }\n                return {\n                    // x1: rect.left + pos.x,\n                    // y1: rect.top + pos.y,\n                    // x2: rect.right + pos.x,\n                    // y2: rect.bottom + pos.y\n\n                    // This might fix\n                    x1: rect.left - body.left,\n                    y1: rect.top - body.top,\n                    x2: rect.right - body.left,\n                    y2: rect.bottom - body.top,\n\n                };\n            } catch (e) {\n                okanjo.report(err, { exception: e, element });\n                return {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                    err: 1\n                };\n            }\n        },\n\n        /**\n         * Gets the intersection information given the element, viewport and scroll positions\n         * @param e – Element position\n         * @param s - Scroll position\n         * @param v - Viewport size\n         * @return {{intersectionArea: number, elementArea: number}}\n         * @private\n         */\n        _getIntersection: (e, s, v) => {\n            let iLeft = Math.max(e.x1, s.x),\n                iRight = Math.min(e.x2, s.x+v.vw),\n                iTop = Math.max(e.y1, s.y),\n                iBottom = Math.min(e.y2, s.y+v.vh),\n\n                intersectionArea = Math.max(0, iRight - iLeft) * Math.max(0, iBottom - iTop),\n                elementArea = (e.x2 - e.x1) * (e.y2 - e.y1);\n\n            return {\n                intersectionArea,\n                elementArea\n            };\n        },\n\n        /**\n         * Gets the percentage of the element pixels currently within the viewport\n         * @param {HTMLElement|Node} element\n         * @return {number}\n         */\n        getPercentageInViewport: (element) => {\n            let e = okanjo.ui.getElementPosition(element),\n                s = okanjo.ui.getScrollPosition(),\n                v = okanjo.ui.getViewportSize();\n\n            // If there was a problem getting the element position, fail fast\n            if (e.err) return 0;\n\n            // Get intersection rectangle\n            let { intersectionArea, elementArea } = okanjo.ui._getIntersection(e,s,v);\n\n            // Don't let it return NaN\n            /* istanbul ignore else: jsdom no love positional data */\n            if (elementArea <= 0) return 0;\n\n            /* istanbul ignore next: jsdom no love positional data, area tested with helper fn tho */\n            return intersectionArea / elementArea;\n        }\n    };\n\n    /**\n     * Splits the text in the element to fit within the visible height of its container, and separates with an ellipses\n     * @param {HTMLElement|Node} element – The DOM element containing the text to fit\n     * @param {HTMLElement} [container] – Optional container to compute fit on. Defaults to the element's parent\n     */\n    okanjo.ui.ellipsify = function(element, container) {\n\n        // It's a sad day when you have to resort to JS because CSS kludges are too hacky to work down to IE8, programmatically\n\n        //noinspection JSValidateTypes\n        const parent = container || element.parentNode,\n            targetHeight = okanjo.ui.getElementSize(parent).height,\n            useTextContent = element.textContent !== undefined;\n\n        let text = useTextContent ? element.textContent /* istanbul ignore next: browser diffs */ : element.innerText,\n            replacedText = \"\",\n            safety = 5000, // Safety switch to bust out of the loop in the event something goes terribly wrong\n            replacer = (match) => {\n                /* istanbul ignore next: n/a to jsdom */\n                replacedText = match.substr(0, match.length-3) + replacedText;\n                /* istanbul ignore next: n/a to jsdom */\n                return '...';\n            };\n\n        // Trim off characters until we can fit the text and ellipses\n        // If the text already fits, this loop is ignored\n        /* istanbul ignore next: jsdom doesn't do element size computing stuff */\n        while (okanjo.ui.getElementSize(element).height > targetHeight && text.length > 0 && (safety-- > 0)) {\n            text = useTextContent ? element.textContent : element.innerText;\n\n            text = text.replace(ELLIPSIFY_PATTERN, replacer);\n\n            if (useTextContent) {\n                element.textContent = text;\n            } else {\n                element.innerText = text;\n            }\n        }\n\n        // If there is work to do, split the content into two span tags\n        // Like so: [content]...[hidden content]\n        /* istanbul ignore if: n/a to jsdom */\n        if (replacedText.length > 0) {\n\n            let content = document.createElement('span'),\n                span = document.createElement('span');\n\n            content.setAttribute('class','okanjo-ellipses');\n            span.setAttribute('class','okanjo-visually-hidden');\n\n            if (useTextContent) {\n                content.textContent = text.substr(0, text.length-3);\n                span.textContent = replacedText;\n            } else {\n                content.innerText = text.substr(0, text.length-3);\n                span.innerText = replacedText;\n            }\n\n            element.innerHTML = '';\n            element.appendChild(content);\n            element.appendChild(span);\n        }\n\n    };\n\n    //endregion\n\n    // Export the root namespace\n    return window.okanjo = okanjo;\n\n})(window, document);","\"use strict\";\n\n(function(window) {\n\n    const JSON_TEST = /^application\\/json/;\n    const okanjo = window.okanjo;\n\n    /**\n     * Performs a reliable XHR request\n     * @param {string} method - Request method\n     * @param {string} url - URL\n     * @param [payload] optional payload\n     * @param callback Fired on when completed (err, res), normalized to standard response format\n     */\n    okanjo.net.request = function (method, url, payload, callback) {\n\n        // payload is not required\n        if (typeof payload === \"function\") {\n            callback = payload;\n            payload = undefined;\n        }\n\n        // Create a new instance\n        const req = new (window.XMLHttpRequest /* istanbul ignore next: old ie */ || window.ActiveXObject)('MSXML2.XMLHTTP.3.0');\n\n        // Flag to prevent duplicate callbacks / races\n        let calledBack = false;\n\n        // Normalized done handler\n        const done = function(err, res) {\n            /* istanbul ignore else: out of scope */\n            if (!calledBack) {\n                calledBack = true;\n                callback(err, res);\n            }\n        };\n\n        // Apply timeout if configured globally\n        if (okanjo.net.request.timeout) {\n            req.timeout = okanjo.net.request.timeout;\n        }\n\n        // Catch timeout errors\n        req.ontimeout = function(e) {\n            /* istanbul ignore next: idk if jsdom can mock this, also readystatechange may fire before this anyway */\n            done({\n                statusCode: 504,\n                error: \"Request timed out\",\n                message: 'Something went wrong',\n                attributes: {\n                    event: e,\n                    xhr: req\n                }\n            });\n        };\n\n        // Handle the response\n        req.onreadystatechange = function(e) {\n            // 4 = completed / failed\n            if (req.readyState === 4) {\n                // Do we have a response?\n                if (req.status > 0) {\n                    let res;\n\n                    // Check if we got JSON and parse it right away\n                    if (JSON_TEST.test(req.getResponseHeader('Content-Type'))) {\n                        res = JSON.parse(req.responseText);\n                    } else {\n                        // Not JSON, normalize it instead\n                        res = {\n                            statusCode: req.status,\n                            data: req.responseText\n                        };\n                    }\n\n                    // Put the response in the proper slot (err for non success responses)\n                    if (req.status >= 200 && req.status < 300) {\n                        done(null, res);\n                    } else {\n                        done(res);\n                    }\n                } else {\n                    // Request failed - e.g. CORS or network issues\n                    done({\n                        statusCode: 503,\n                        error: \"Request failed\",\n                        message: 'Something went wrong',\n                        attributes: {\n                            event: e,\n                            xhr: req\n                        }\n                    });\n                }\n            }\n        };\n\n        // Open the request\n        req.open(method.toUpperCase(), url);\n\n        // Include credentials\n        req.withCredentials = true;\n\n        // Handle post payloads\n        if (['POST','PUT','PATCH'].includes(method.toUpperCase())) {\n            req.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n            if (payload !== undefined) {\n                payload = JSON.stringify(payload);\n            }\n        }\n\n        // Ship it\n        req.send(payload || undefined);\n    };\n\n    // Bind helpers to make things easy as pie\n    okanjo.net.request.get = okanjo.net.request.bind(this, 'GET');\n    okanjo.net.request.post = okanjo.net.request.bind(this, 'POST');\n    okanjo.net.request.put = okanjo.net.request.bind(this, 'PUT');\n    okanjo.net.request.delete = okanjo.net.request.bind(this, 'DELETE');\n\n    /**\n     * Helper to aid in minificiation+querystringify and redundant encodeURIComponent stuff\n     * @param val\n     * @return {*}\n     */\n    const encode = (val) => {\n        if (val === null || val === undefined) return '';\n        return encodeURIComponent(''+val);\n    };\n\n    /**\n     * Helper to aid in getting a query string key using a prefix and keyname\n     * @param key\n     * @param keyPrefix\n     * @return {*}\n     */\n    const getKey = (key, keyPrefix) => {\n        if (keyPrefix) {\n            return `${keyPrefix}[${encode(key)}]`;\n        } else {\n            return encode(key)\n        }\n    };\n\n    /**\n     * Super basic querystringify helper. It handles deep objects, but not for array values\n     * @param obj\n     * @param [keyPrefix]\n     * @return {string}\n     */\n    okanjo.net.request.stringify = (obj, keyPrefix) => {\n        let pairs = [];\n        keyPrefix = keyPrefix || \"\";\n        Object.keys(obj).forEach((key) => {\n            let value = obj[key];\n            if (Array.isArray(value)) {\n                value.forEach((v) => pairs.push(getKey(key, keyPrefix) + '=' + encode(v))); // Does not do that PHP garbage with key[]=val\n            } else if (typeof value === \"object\" && value !== null) {\n                // Recurse\n                let res = okanjo.net.request.stringify(value, getKey(key, keyPrefix));\n                if (res) pairs.push(res);\n            } else if (value !== undefined) {\n                pairs.push(getKey(key, keyPrefix) + '=' + encode(value));\n            }\n        });\n        return pairs.join('&');\n    };\n\n})(window);","\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS\n(function(window, document) {\n\n    /**\n     * Okanjo cookie utility helpers\n     */\n    window.okanjo.util.cookie = {\n\n        /**\n         * Sets a cookie\n         * @param cookieName\n         * @param value\n         * @param expireDays\n         */\n        set: (cookieName, value, expireDays) => {\n            const expireDate = new Date();\n            expireDate.setDate(expireDate.getDate() + expireDays);\n            const expires = expireDays ? \" Expires=\" + expireDate.toUTCString() + \";\" : \"\";\n            const path = \" Path=/\";\n            const cookieValue = `${encodeURI(value)};${expires}${path}`;\n            document.cookie = cookieName + \"=\" + cookieValue;\n        },\n\n        /**\n         * Gets a cookie\n         * @param cookieName\n         * @return {*}\n         */\n        get: (cookieName) => {\n            let output = null;\n            document.cookie\n                .split(\";\")\n                .find((cookie) => {\n                    let nameTest = cookie.substr(0, cookie.indexOf(\"=\")).trim();\n                    let value = cookie.substr(cookie.indexOf(\"=\") + 1);\n                    if (nameTest === cookieName) {\n                        output = decodeURI(value);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                })\n            ;\n            return output;\n        }\n    };\n\n})(window, document);","\"use strict\";\n\n//noinspection ThisExpressionReferencesGlobalObjectJS,JSUnusedLocalSymbols\n(function(window, document) {\n\n    const okanjo = window.okanjo;\n\n    /**\n     * Event tracking class\n     * @type {Metrics}\n     */\n    class Metrics {\n\n        //noinspection JSUnusedGlobalSymbols\n        constructor() {\n\n            /**\n             * Events queued here before submission\n             * @type {Array}\n             * @private\n             */\n            this._queue = this._getStoredQueue();\n            this._processTimeout = null; // queue event loop timeout pointer\n\n            /**\n             * Unique page grouping event identifier\n             */\n            this.pageId = okanjo.util.shortid();\n            this.defaultChannel = Metrics.Channel.external;\n\n            this.sid = null;\n            this.sourceCh = null;\n            this.sourceCx = null;\n\n            // Extract referral data, if set\n            this._checkUrlForReferral();\n\n            // TODO - look into iframe session correlation system\n        }\n\n        //noinspection JSMethodCanBeStatic\n        /**\n         * Gets the storage backed metric queue, in case we did not send everything last time\n         * @return {Array}\n         * @private\n         */\n        _getStoredQueue() {\n            if (window.localStorage[Metrics.Params.queue]) {\n                try {\n                    let queue = JSON.parse(window.localStorage[Metrics.Params.queue]);\n                    if (Array.isArray(queue)) {\n                        return queue;\n                    } else {\n                        okanjo.report('Stored queue is not a queue', {queue});\n                        return [];\n                    }\n                } catch (e) {\n                    okanjo.report('Failed to load metric queue from storage', {err: e});\n                    return [];\n                }\n            } else {\n                // not stored\n                return [];\n            }\n        }\n\n        /**\n         * Updates the queue stored in storage, in the event we can't complete our submissions\n         * @param delay - Whether to delay updating the queue for a bit, to let other metrics pile in\n         * @private\n         */\n        _saveQueue(delay) {\n            if (delay) {\n                if (this._saveQueueTimeout) clearTimeout(this._saveQueueTimeout);\n                this._saveQueueTimeout = setTimeout(() => {\n                    this._saveQueue(false);\n                    this._saveQueueTimeout = null;\n                }, 100);\n            } else {\n                window.localStorage[Metrics.Params.queue] = JSON.stringify(this._queue);\n            }\n        }\n\n        /**\n         * Extract contextual pass-through data from the URL, if present\n         * @private\n         */\n        _checkUrlForReferral() {\n            const pageArgs = okanjo.util.getPageArguments(true),\n                urlSid = pageArgs[Metrics.Params.name],\n                localSid = window.localStorage[Metrics.Params.name] || okanjo.util.cookie.get(Metrics.Params.name), // pull from storage or cookie\n                sourceContext = pageArgs[Metrics.Params.context],\n                sourceChannel = pageArgs[Metrics.Params.channel];\n\n            // If for some reason, both are set, record the incident as a possible correlation\n            if (urlSid && localSid && urlSid !== localSid) {\n                this.trackEvent({\n                    object_type: Metrics.Object.metric_session,\n                    event_type: Metrics.Event.correlation,\n                    id: urlSid+\"_\"+localSid,\n                    ch: this.defaultChannel,\n                    _noProcess: true\n                });\n            }\n\n            // Update local values\n            this.sid = localSid || urlSid || null; // prefer local over remote (changed in 1.0)\n            this.sourceCh = sourceChannel || null;\n            this.sourceCx = sourceContext || null;\n        }\n\n        /**\n         * Submits an individual event metric\n         * @param event\n         * @param callback\n         */\n        trackEvent(event, callback) {\n            // Ensure the event contains the required fields\n            if (!event.object_type || !event.event_type) {\n                okanjo.report('Invalid metric to track (missing object_type or event_type)', {event});\n                return;\n            }\n\n            // Queue the event for publishing\n            this._push(event, callback);\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Submits a page view metric\n         * @param event\n         * @param callback\n         */\n        trackPageView(event, callback) {\n            event = event || {};\n            event.object_type = Metrics.Object.page;\n            event.event_type = Metrics.Event.view;\n            event.id = event.id || window.location.href;\n            event.ch = event.ch || this.defaultChannel;\n\n            // Queue the event for publishing\n            this.trackEvent(event, callback);\n        }\n\n        /**\n         * Adds an event to the queue\n         * @param event\n         * @param callback\n         * @private\n         */\n        _push(event, callback) {\n            this._queue.push({ event, callback });\n\n            // Save the queue\n            this._saveQueue(true);\n\n            // Start burning down the queue, unless the event says not to\n            if (event._noProcess) {\n                delete event._noProcess;\n            } else {\n                this._processQueue();\n            }\n        }\n\n        /**\n         * Burn down the queue\n         * @private\n         */\n        _processQueue() {\n            // If the queue is not already being processed, and there's stuff to process, continue sending them\n            if (!this._processTimeout && this._queue.length > 0) {\n                this._processTimeout = setTimeout(() => {\n\n                    // Pull the items we're going to batch out of the queue\n                    const items = this._queue.splice(0, 255);\n                    this._saveQueue(false);\n\n                    // Track the item\n                    this._batchSend(items, (err, res) => {\n                        // TODO: If there was an error, consider splicing the batch back into the queue\n\n                        // Update / Set the metric sid on the publisher\n                        /* istanbul ignore else: server barks */\n                        if (res && res.data && res.data.sid) this._updateSid(res.data.sid);\n\n                        // When this batch is done being tracked, iterate to the next metric then fire it's callback if set\n                        this._processTimeout = null;\n                        this._processQueue();\n\n                        // Fire the event callbacks if there are any\n                        items.forEach((item) => {\n                            item.callback && item.callback(err, res);\n                        });\n                    });\n\n                }, 0); // break event loop, maybe\n            }\n        }\n\n        /**\n         * Sends a bunch of queued metric events\n         * @param items\n         * @param callback\n         * @private\n         */\n        _batchSend(items, callback) {\n\n            // Normalize event data\n            const events = items.map((item) => {\n                this._normalizeEvent(item.event);\n\n                // Strip duplicated data from event batch\n                delete item.event.sid;\n                delete item.event.win;\n\n                return item.event;\n            });\n\n            const payload = {\n                events,\n                win: window.location.href\n            };\n\n            const route = okanjo.net.getRoute(okanjo.net.routes.metrics_batch);\n\n            // Set sid if present\n            if (this.sid) {\n                payload.sid = this.sid;\n            }\n\n            // Send it\n            okanjo.net.request.post(\n                route,\n                payload,\n                (err, res) => {\n                    /* istanbul ignore if: out of scope */\n                    if (err) {\n                        okanjo.report('Failed to send metrics batch', { err, res, items, route });\n                    }\n                    callback && callback(err, res);\n                }\n            );\n        }\n\n        /**\n         * Normaizes events so that they contain consistent data values\n         * @param event\n         * @private\n         */\n        _normalizeEvent(event) {\n\n            // Ensure meta is ready to receive values\n            event.m = event.m || {};\n\n            // Set key\n            event.key = event.key || event.m.key || okanjo.key || undefined;\n\n            // Set session\n            if (this.sid) event.sid = this.sid;\n\n            // Clone the metadata, since it might be a direct reference to a widget property\n            // Deleting properties on the meta object could be very destructive\n            event.m = Object.assign({}, event.m); // event.m should be flat\n\n            // Strip meta keys that should be excluded\n            Object.keys(Metrics.Meta.exclude).forEach((key) => delete event.m[key]);\n\n            // Set referral channel / context\n            if (this.sourceCh) { event.m.ref_ch = this.sourceCh; }\n            if (this.sourceCx) { event.m.ref_cx = this.sourceCx; }\n\n            // Set page group id\n            event.m.pgid = this.pageId;\n\n            // Set okanjo version\n            event.m.ok_ver = okanjo.version;\n\n            // Finalize metadata\n            event.m = okanjo.util.flatten(event.m, { arrayToCsv: true });\n\n            // Ensure metadata strings won't exceed the imposed limit\n            Object.keys(event.m).forEach((key) => {\n                if (typeof event.m[key] === \"string\") {\n                    event.m[key] = event.m[key].substr(0, 255);\n                }\n            });\n\n            // Set page source reference\n            if (document.referrer) {\n                event.ref = document.referrer;\n            }\n\n             // Set the window location\n            event.win = window.location.href;\n        }\n\n        /**\n         * Updates the stored session identifier\n         * @param sid\n         * @private\n         */\n        _updateSid(sid) {\n            if (!this.sid && sid) {\n                this.sid = sid;\n                window.localStorage[Metrics.Params.name] = sid;\n                okanjo.util.cookie.set(Metrics.Params.name, sid, Metrics.Params.ttl);\n            }\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds DOM element dimensions / positional data to the event\n         * @param element\n         * @param event\n         * @return {*|{}}\n         */\n        static addElementInfo(element, event) {\n            const page = okanjo.ui.getPageSize(),\n                size = okanjo.ui.getElementPosition(element);\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.pw = page.w;\n            event.m.ph = page.h;\n            event.m.x1 = size.x1;\n            event.m.y1 = size.y1;\n            event.m.x2 = size.x2;\n            event.m.y2 = size.y2;\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds viewport dimensions / positional data to the event\n         * @param event\n         * @return {*|{}}\n         */\n        static addViewportInfo(event) {\n            const vp = okanjo.ui.getViewportSize(),\n                pos = okanjo.ui.getScrollPosition();\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.vx1 = pos.x;\n            event.m.vy1 = pos.y;\n            event.m.vx2 = pos.x+vp.vw;\n            event.m.vy2 = pos.y+vp.vh;\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds DOM event positional data to the event\n         * @param jsEvent\n         * @param event\n         * @return {*|{}}\n         */\n        static addEventInfo(jsEvent, event) {\n            const pos = okanjo.ui.getEventPosition(jsEvent);\n\n            event = event || {};\n            event.m = event.m || {};\n            event.m.et = pos.et;\n            event.m.ex = pos.ex;\n            event.m.ey = pos.ey;\n\n            return event;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds meta data values to the event\n         * @param event\n         * @param args\n         * @return {*|{}}\n         */\n        static addEventMeta(event, ...args) {\n            event = event || {};\n            event.m = event.m || {};\n            event.m = Object.assign.apply(Object, [event.m].concat(args));\n            \n            return event;\n        }\n\n        /**\n         * Helper to create a new fluent event structure\n         * @param data\n         * @param args\n         * @return {MetricEvent}\n         */\n        static create(data, ...args) {\n            // return okanjo.util.deepClone(Object.assign.apply(Object, [{}].concat(args)));\n            return new MetricEvent(data, args);\n        }\n\n        //noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n        /**\n         * Helper to create a new fluent event structure\n         * @param args\n         * @return {*}\n         */\n        create(...args) {\n            return Metrics.create.apply(null, args);\n        }\n\n    }\n\n    /**\n     * The storage/cookie/url param names\n     * @type {{queue: string, name: string, channel: string, context: string, ttl: number}}\n     */\n    Metrics.Params = {\n        queue: '_ok_q',\n        name: 'ok_msid',\n        channel: 'ok_ch',\n        context: 'ok_cx',\n        ttl: 1460 // 4 years\n    };\n\n    /**\n     * Event Metadata configuration\n     * @type {{exclude: [*]}}\n     */\n    Metrics.Meta = {\n        exclude: ['key','callback','metrics_channel_context','metrics_context','mode']\n    };\n\n    /**\n     * Event Types\n     * @type {{view: string, impression: string, interaction: string, correlation: string}}\n     */\n    Metrics.Event = {\n        view: 'vw',\n        impression: 'imp',\n        interaction: 'int',\n        correlation: 'cor'\n    };\n\n    /**\n     * Event Action Types\n     * @type {{click: string, inline_click: string}}\n     */\n    Metrics.Action = {\n        click: \"click\",\n        inline_click: \"inline_click\"\n    };\n\n    /**\n     * Event Object Types\n     * @type {{article: string, thirdparty_ad: string, cart: string, page: string, widget: string, product: string, store: string, cause: string, marketplace: string, order: string, order_item: string, user: string, metric_session: string}}\n     */\n    Metrics.Object = {\n        article: 'am',\n        thirdparty_ad: 'ta',\n        cart: 'ct',\n        page: 'pg',\n        widget: 'wg',\n        product: 'pr',\n        store: 'st',\n        cause: 'ca',\n        marketplace: 'mp',\n        order: 'or',\n        order_item: 'oi',\n        user: 'ur',\n        metric_session: 'mt'\n    };\n\n    /**\n     * Event Channels\n     * @type {{product_widget: string, ad_widget: string, store_widget: string, marketplace: string, external: string}}\n     */\n    Metrics.Channel = {\n        placement: 'pw',\n        marketplace: 'mp',\n        external: 'ex',\n\n        // Deprecated:\n        product_widget: 'pw',\n        ad_widget: 'aw',\n        store_widget: 'sw'\n    };\n\n    /**\n     * Event Environments\n     * @type {{live: string, testing: string}}\n     */\n    Metrics.Environment = {\n        live: \"live\",\n        testing: \"testing\"\n    };\n\n    /**\n     * Fluent wrapper around making events simple\n     */\n    class MetricEvent {\n        constructor(data, others) {\n            // Merge the data and other data sets into this object\n            data = data || {};\n            this.data(data);\n            /* istanbul ignore else: metrics.create is the only way to create this right now */\n            if (Array.isArray(others)) {\n                others.forEach((data) => {\n                    this.data(data);\n                });\n            }\n        }\n\n        /**\n         * Sets event parameter key-values\n         * @param data\n         */\n        data(data) {\n            Object.assign(this, okanjo.util.deepClone(data));\n            return this;\n        }\n\n        /**\n         * Adds DOM event positional data to the event\n         * @param jsEvent\n         * @return {MetricEvent}\n         */\n        event(jsEvent) {\n            Metrics.addEventInfo(jsEvent, this);\n            return this;\n        }\n\n        /**\n         * Adds viewport dimensions / positional data to the event\n         * @return {MetricEvent}\n         */\n        viewport() {\n            Metrics.addViewportInfo(this);\n            return this;\n        }\n\n        /**\n         * Adds DOM element dimensions / positional data to the event\n         * @param element\n         * @return {MetricEvent}\n         */\n        element(element) {\n            Metrics.addElementInfo(element, this);\n            return this;\n        }\n\n        //noinspection JSUnusedGlobalSymbols\n        /**\n         * Adds meta data values to the event\n         * @param args\n         * @return {MetricEvent}\n         */\n        meta(...args) {\n            Metrics.addEventMeta.apply(null, [this].concat(args));\n            return this;\n        }\n\n        /**\n         * Sets the object and event type on the event w/o having to use .data\n         * @param object_type\n         * @param event_type\n         * @return {MetricEvent}\n         */\n        type(object_type, event_type) {\n            this.object_type = object_type;\n            this.event_type = event_type;\n            return this;\n        }\n\n        /**\n         * Finalizes and sends the event\n         * @param callback\n         */\n        send(callback) {\n            okanjo.metrics.trackEvent(this, callback);\n            // DONT RETURN - BREAK THE CHAIN HERE\n        }\n\n        /**\n         * Gets the single-metric tracking url for this event\n         * @return {string}\n         */\n        toUrl() {\n            // Copy data w/o modifying it\n            const event = Object.assign({}, this);\n\n            // Extract params\n            const {\n                object_type,\n                event_type\n            } = event;\n            delete event.object_type;\n            delete event.event_type;\n\n            // Normalize event data\n            okanjo.metrics._normalizeEvent(event);\n\n            // Get the URL\n            return okanjo.net.getRoute(okanjo.net.routes.metrics, { object_type, event_type }) + '?' +\n                okanjo.net.request.stringify(event);\n        }\n    }\n\n    // Export / initialize\n    okanjo.metrics = new Metrics();\n\n})(window, document);"],"sourceRoot":"./"}